{
  "{\"sourceMaps\":\"both\",\"sourceRoot\":\"/Users/appy/QI/js-samples/algos2/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/appy/QI/js-samples/algos2\",\"filename\":\"/Users/appy/QI/js-samples/algos2/bubbleSort.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/appy/QI/js-samples/algos2\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.1": {
    "metadata": {},
    "options": {
      "sourceMaps": "both",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/appy/QI/js-samples/algos2",
      "filename": "/Users/appy/QI/js-samples/algos2/bubbleSort.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/appy/QI/js-samples/algos2",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/appy/QI/js-samples/algos2/bubbleSort.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/appy/QI/js-samples/algos2/bubbleSort.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
        "sourceFileName": "bubbleSort.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar UTILS = _interopRequireWildcard(require(\"./utils\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction sort(data, start, end, compare, swap) {\n  start = start || 0;\n  end = end || data.length;\n  compare = compare || UTILS.compare;\n  swap = swap || UTILS.swap;\n  var stats = {\n    nComps: 0,\n    nWrites: 0\n  };\n\n  for (var i = start; i < end; i++) {\n    var swapped = false;\n\n    for (var j = i + 1; j < end; j++) {\n      if (compare(data[i], data[j]) > 0) {\n        swap(data, i, j);\n        swapped = true;\n        stats.nWrites += 2;\n      }\n    }\n\n    stats.nComps += end - i - 1; // P if ( !swapped ) { break; }\n  }\n\n  return stats;\n}\n\nvar arr = UTILS.makeArray();\nconsole.time(\"BubbleSort\");\nvar stats = sort(arr);\nconsole.timeEnd(\"BubbleSort\");\nconsole.log(arr.slice(0, 5) + \" ... \" + arr.slice(-5));\nconsole.log(\"Sorted:\" + UTILS.checkSorted(arr));\nconsole.log(\"#swaps=\" + stats.nWrites + \" #compares=\" + stats.nComps);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1YmJsZVNvcnQuanMiXSwibmFtZXMiOlsic29ydCIsImRhdGEiLCJzdGFydCIsImVuZCIsImNvbXBhcmUiLCJzd2FwIiwibGVuZ3RoIiwiVVRJTFMiLCJzdGF0cyIsIm5Db21wcyIsIm5Xcml0ZXMiLCJpIiwic3dhcHBlZCIsImoiLCJhcnIiLCJtYWtlQXJyYXkiLCJjb25zb2xlIiwidGltZSIsInRpbWVFbmQiLCJsb2ciLCJzbGljZSIsImNoZWNrU29ydGVkIl0sIm1hcHBpbmdzIjoiQUFDQTs7OztBQUVBOzs7Ozs7QUFHQSxTQUFTQSxJQUFULENBQWVDLElBQWYsRUFBcUJDLEtBQXJCLEVBQTRCQyxHQUE1QixFQUFpQ0MsT0FBakMsRUFBMENDLElBQTFDLEVBQWlEO0FBQ2hESCxFQUFBQSxLQUFLLEdBQUdBLEtBQUssSUFBSSxDQUFqQjtBQUNBQyxFQUFBQSxHQUFHLEdBQUdBLEdBQUcsSUFBSUYsSUFBSSxDQUFDSyxNQUFsQjtBQUNBRixFQUFBQSxPQUFPLEdBQUdBLE9BQU8sSUFBSUcsS0FBSyxDQUFDSCxPQUEzQjtBQUNBQyxFQUFBQSxJQUFJLEdBQUdBLElBQUksSUFBSUUsS0FBSyxDQUFDRixJQUFyQjtBQUVBLE1BQUlHLEtBQUssR0FBRztBQUFFQyxJQUFBQSxNQUFNLEVBQUUsQ0FBVjtBQUFhQyxJQUFBQSxPQUFPLEVBQUU7QUFBdEIsR0FBWjs7QUFDQSxPQUFNLElBQUlDLENBQUMsR0FBR1QsS0FBZCxFQUFxQlMsQ0FBQyxHQUFHUixHQUF6QixFQUE4QlEsQ0FBQyxFQUEvQixFQUFvQztBQUNuQyxRQUFJQyxPQUFPLEdBQUcsS0FBZDs7QUFDQSxTQUFNLElBQUlDLENBQUMsR0FBR0YsQ0FBQyxHQUFHLENBQWxCLEVBQXFCRSxDQUFDLEdBQUdWLEdBQXpCLEVBQThCVSxDQUFDLEVBQS9CLEVBQW9DO0FBQ25DLFVBQUtULE9BQU8sQ0FBRUgsSUFBSSxDQUFFVSxDQUFGLENBQU4sRUFBYVYsSUFBSSxDQUFFWSxDQUFGLENBQWpCLENBQVAsR0FBa0MsQ0FBdkMsRUFBMkM7QUFDMUNSLFFBQUFBLElBQUksQ0FBRUosSUFBRixFQUFRVSxDQUFSLEVBQVdFLENBQVgsQ0FBSjtBQUNBRCxRQUFBQSxPQUFPLEdBQUcsSUFBVjtBQUNBSixRQUFBQSxLQUFLLENBQUNFLE9BQU4sSUFBaUIsQ0FBakI7QUFDQTtBQUNEOztBQUNERixJQUFBQSxLQUFLLENBQUNDLE1BQU4sSUFBZ0JOLEdBQUcsR0FBR1EsQ0FBTixHQUFVLENBQTFCLENBVG1DLENBV25DO0FBQ0E7O0FBQ0QsU0FBT0gsS0FBUDtBQUNBOztBQUVELElBQUlNLEdBQUcsR0FBR1AsS0FBSyxDQUFDUSxTQUFOLEVBQVY7QUFDQUMsT0FBTyxDQUFDQyxJQUFSLENBQWMsWUFBZDtBQUNBLElBQU1ULEtBQUssR0FBR1IsSUFBSSxDQUFFYyxHQUFGLENBQWxCO0FBQ0FFLE9BQU8sQ0FBQ0UsT0FBUixDQUFpQixZQUFqQjtBQUVBRixPQUFPLENBQUNHLEdBQVIsQ0FBYUwsR0FBRyxDQUFDTSxLQUFKLENBQVcsQ0FBWCxFQUFjLENBQWQsSUFBb0IsT0FBcEIsR0FBOEJOLEdBQUcsQ0FBQ00sS0FBSixDQUFXLENBQUMsQ0FBWixDQUEzQztBQUNBSixPQUFPLENBQUNHLEdBQVIsQ0FBYSxZQUFZWixLQUFLLENBQUNjLFdBQU4sQ0FBbUJQLEdBQW5CLENBQXpCO0FBQ0FFLE9BQU8sQ0FBQ0csR0FBUixDQUFhLFlBQVlYLEtBQUssQ0FBQ0UsT0FBbEIsR0FBNEIsYUFBNUIsR0FBNENGLEtBQUssQ0FBQ0MsTUFBL0QiLCJzb3VyY2VSb290IjoiL1VzZXJzL2FwcHkvUUkvanMtc2FtcGxlcy9hbGdvczIvIiwic291cmNlc0NvbnRlbnQiOlsiXG5cInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0ICogYXMgVVRJTFMgZnJvbSBcIi4vdXRpbHNcIjtcblxuXG5mdW5jdGlvbiBzb3J0KCBkYXRhLCBzdGFydCwgZW5kLCBjb21wYXJlLCBzd2FwICkge1xuXHRzdGFydCA9IHN0YXJ0IHx8IDA7XG5cdGVuZCA9IGVuZCB8fCBkYXRhLmxlbmd0aDtcblx0Y29tcGFyZSA9IGNvbXBhcmUgfHwgVVRJTFMuY29tcGFyZTtcblx0c3dhcCA9IHN3YXAgfHwgVVRJTFMuc3dhcDtcblxuXHRsZXQgc3RhdHMgPSB7IG5Db21wczogMCwgbldyaXRlczogMCB9O1xuXHRmb3IgKCBsZXQgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpKysgKSB7XG5cdFx0bGV0IHN3YXBwZWQgPSBmYWxzZTtcblx0XHRmb3IgKCBsZXQgaiA9IGkgKyAxOyBqIDwgZW5kOyBqKysgKSB7XG5cdFx0XHRpZiAoIGNvbXBhcmUoIGRhdGFbIGkgXSwgZGF0YVsgaiBdICkgPiAwICkge1xuXHRcdFx0XHRzd2FwKCBkYXRhLCBpLCBqICk7XG5cdFx0XHRcdHN3YXBwZWQgPSB0cnVlO1xuXHRcdFx0XHRzdGF0cy5uV3JpdGVzICs9IDI7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHN0YXRzLm5Db21wcyArPSBlbmQgLSBpIC0gMTtcblxuXHRcdC8vIFAgaWYgKCAhc3dhcHBlZCApIHsgYnJlYWs7IH1cblx0fVxuXHRyZXR1cm4gc3RhdHM7XG59XG5cbmxldCBhcnIgPSBVVElMUy5tYWtlQXJyYXkoKTtcbmNvbnNvbGUudGltZSggXCJCdWJibGVTb3J0XCIgKTtcbmNvbnN0IHN0YXRzID0gc29ydCggYXJyICk7XG5jb25zb2xlLnRpbWVFbmQoIFwiQnViYmxlU29ydFwiICk7XG5cbmNvbnNvbGUubG9nKCBhcnIuc2xpY2UoIDAsIDUgKSArIFwiIC4uLiBcIiArIGFyci5zbGljZSggLTUgKSApO1xuY29uc29sZS5sb2coIFwiU29ydGVkOlwiICsgVVRJTFMuY2hlY2tTb3J0ZWQoIGFyciApICk7XG5jb25zb2xlLmxvZyggXCIjc3dhcHM9XCIgKyBzdGF0cy5uV3JpdGVzICsgXCIgI2NvbXBhcmVzPVwiICsgc3RhdHMubkNvbXBzICk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "bubbleSort.js"
      ],
      "names": [
        "sort",
        "data",
        "start",
        "end",
        "compare",
        "swap",
        "length",
        "UTILS",
        "stats",
        "nComps",
        "nWrites",
        "i",
        "swapped",
        "j",
        "arr",
        "makeArray",
        "console",
        "time",
        "timeEnd",
        "log",
        "slice",
        "checkSorted"
      ],
      "mappings": "AACA;;;;AAEA;;;;;;AAGA,SAASA,IAAT,CAAeC,IAAf,EAAqBC,KAArB,EAA4BC,GAA5B,EAAiCC,OAAjC,EAA0CC,IAA1C,EAAiD;AAChDH,EAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;AACAC,EAAAA,GAAG,GAAGA,GAAG,IAAIF,IAAI,CAACK,MAAlB;AACAF,EAAAA,OAAO,GAAGA,OAAO,IAAIG,KAAK,CAACH,OAA3B;AACAC,EAAAA,IAAI,GAAGA,IAAI,IAAIE,KAAK,CAACF,IAArB;AAEA,MAAIG,KAAK,GAAG;AAAEC,IAAAA,MAAM,EAAE,CAAV;AAAaC,IAAAA,OAAO,EAAE;AAAtB,GAAZ;;AACA,OAAM,IAAIC,CAAC,GAAGT,KAAd,EAAqBS,CAAC,GAAGR,GAAzB,EAA8BQ,CAAC,EAA/B,EAAoC;AACnC,QAAIC,OAAO,GAAG,KAAd;;AACA,SAAM,IAAIC,CAAC,GAAGF,CAAC,GAAG,CAAlB,EAAqBE,CAAC,GAAGV,GAAzB,EAA8BU,CAAC,EAA/B,EAAoC;AACnC,UAAKT,OAAO,CAAEH,IAAI,CAAEU,CAAF,CAAN,EAAaV,IAAI,CAAEY,CAAF,CAAjB,CAAP,GAAkC,CAAvC,EAA2C;AAC1CR,QAAAA,IAAI,CAAEJ,IAAF,EAAQU,CAAR,EAAWE,CAAX,CAAJ;AACAD,QAAAA,OAAO,GAAG,IAAV;AACAJ,QAAAA,KAAK,CAACE,OAAN,IAAiB,CAAjB;AACA;AACD;;AACDF,IAAAA,KAAK,CAACC,MAAN,IAAgBN,GAAG,GAAGQ,CAAN,GAAU,CAA1B,CATmC,CAWnC;AACA;;AACD,SAAOH,KAAP;AACA;;AAED,IAAIM,GAAG,GAAGP,KAAK,CAACQ,SAAN,EAAV;AACAC,OAAO,CAACC,IAAR,CAAc,YAAd;AACA,IAAMT,KAAK,GAAGR,IAAI,CAAEc,GAAF,CAAlB;AACAE,OAAO,CAACE,OAAR,CAAiB,YAAjB;AAEAF,OAAO,CAACG,GAAR,CAAaL,GAAG,CAACM,KAAJ,CAAW,CAAX,EAAc,CAAd,IAAoB,OAApB,GAA8BN,GAAG,CAACM,KAAJ,CAAW,CAAC,CAAZ,CAA3C;AACAJ,OAAO,CAACG,GAAR,CAAa,YAAYZ,KAAK,CAACc,WAAN,CAAmBP,GAAnB,CAAzB;AACAE,OAAO,CAACG,GAAR,CAAa,YAAYX,KAAK,CAACE,OAAlB,GAA4B,aAA5B,GAA4CF,KAAK,CAACC,MAA/D",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "sourcesContent": [
        "\n\"use strict\";\n\nimport * as UTILS from \"./utils\";\n\n\nfunction sort( data, start, end, compare, swap ) {\n\tstart = start || 0;\n\tend = end || data.length;\n\tcompare = compare || UTILS.compare;\n\tswap = swap || UTILS.swap;\n\n\tlet stats = { nComps: 0, nWrites: 0 };\n\tfor ( let i = start; i < end; i++ ) {\n\t\tlet swapped = false;\n\t\tfor ( let j = i + 1; j < end; j++ ) {\n\t\t\tif ( compare( data[ i ], data[ j ] ) > 0 ) {\n\t\t\t\tswap( data, i, j );\n\t\t\t\tswapped = true;\n\t\t\t\tstats.nWrites += 2;\n\t\t\t}\n\t\t}\n\t\tstats.nComps += end - i - 1;\n\n\t\t// P if ( !swapped ) { break; }\n\t}\n\treturn stats;\n}\n\nlet arr = UTILS.makeArray();\nconsole.time( \"BubbleSort\" );\nconst stats = sort( arr );\nconsole.timeEnd( \"BubbleSort\" );\n\nconsole.log( arr.slice( 0, 5 ) + \" ... \" + arr.slice( -5 ) );\nconsole.log( \"Sorted:\" + UTILS.checkSorted( arr ) );\nconsole.log( \"#swaps=\" + stats.nWrites + \" #compares=\" + stats.nComps );\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590617936709
  },
  "{\"sourceMaps\":\"both\",\"sourceRoot\":\"/Users/appy/QI/js-samples/algos2/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/appy/QI/js-samples/algos2\",\"filename\":\"/Users/appy/QI/js-samples/algos2/utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/appy/QI/js-samples/algos2\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.1": {
    "metadata": {},
    "options": {
      "sourceMaps": "both",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/appy/QI/js-samples/algos2",
      "filename": "/Users/appy/QI/js-samples/algos2/utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/appy/QI/js-samples/algos2",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/appy/QI/js-samples/algos2/utils.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/appy/QI/js-samples/algos2/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.swap = swap;\nexports.isGreater = isGreater;\nexports.compare = compare;\nexports.checkSorted = checkSorted;\nexports.makeArray = makeArray;\n\nfunction swap(ar, i, j) {\n  var tmp = ar[i];\n  ar[i] = ar[j];\n  ar[j] = tmp;\n}\n\nfunction isGreater(a, b) {\n  return a > b;\n}\n\nfunction compare(a, b) {\n  return a - b;\n}\n\nfunction checkSorted(data, compare) {\n  compare = compare || isGreater;\n  var last = data.length - 1;\n\n  for (var i = 0; i < last; i++) {\n    if (isGreater(data[i], data[i + 1])) {\n      throw \"Data is NOT sorted @ index \" + i;\n    }\n  }\n\n  return true;\n}\n\nfunction makeArray(small) {\n  return small ? [1, 83, 3, 97, 31, 4, 6, 1, 10] : Array(30000).fill(0).map(function () {\n    return Math.floor(Math.random() * 10000);\n  });\n} //B console.log(makeArray());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbInN3YXAiLCJhciIsImkiLCJqIiwidG1wIiwiaXNHcmVhdGVyIiwiYSIsImIiLCJjb21wYXJlIiwiY2hlY2tTb3J0ZWQiLCJkYXRhIiwibGFzdCIsImxlbmd0aCIsIm1ha2VBcnJheSIsInNtYWxsIiwiQXJyYXkiLCJmaWxsIiwibWFwIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUNPLFNBQVNBLElBQVQsQ0FBZUMsRUFBZixFQUFtQkMsQ0FBbkIsRUFBc0JDLENBQXRCLEVBQTBCO0FBQ2hDLE1BQU1DLEdBQUcsR0FBR0gsRUFBRSxDQUFFQyxDQUFGLENBQWQ7QUFDQUQsRUFBQUEsRUFBRSxDQUFFQyxDQUFGLENBQUYsR0FBVUQsRUFBRSxDQUFFRSxDQUFGLENBQVo7QUFDQUYsRUFBQUEsRUFBRSxDQUFFRSxDQUFGLENBQUYsR0FBVUMsR0FBVjtBQUNBOztBQUVNLFNBQVNDLFNBQVQsQ0FBb0JDLENBQXBCLEVBQXVCQyxDQUF2QixFQUEyQjtBQUNqQyxTQUFPRCxDQUFDLEdBQUdDLENBQVg7QUFDQTs7QUFFTSxTQUFTQyxPQUFULENBQWtCRixDQUFsQixFQUFxQkMsQ0FBckIsRUFBeUI7QUFDL0IsU0FBT0QsQ0FBQyxHQUFHQyxDQUFYO0FBQ0E7O0FBRU0sU0FBU0UsV0FBVCxDQUFzQkMsSUFBdEIsRUFBNEJGLE9BQTVCLEVBQXNDO0FBQzVDQSxFQUFBQSxPQUFPLEdBQUdBLE9BQU8sSUFBSUgsU0FBckI7QUFDQSxNQUFNTSxJQUFJLEdBQUdELElBQUksQ0FBQ0UsTUFBTCxHQUFjLENBQTNCOztBQUNBLE9BQU0sSUFBSVYsQ0FBQyxHQUFHLENBQWQsRUFBaUJBLENBQUMsR0FBR1MsSUFBckIsRUFBMkJULENBQUMsRUFBNUIsRUFBaUM7QUFDaEMsUUFBS0csU0FBUyxDQUFFSyxJQUFJLENBQUVSLENBQUYsQ0FBTixFQUFhUSxJQUFJLENBQUVSLENBQUMsR0FBRyxDQUFOLENBQWpCLENBQWQsRUFBNkM7QUFDNUMsWUFBTSxnQ0FBZ0NBLENBQXRDO0FBQ0E7QUFDRDs7QUFDRCxTQUFPLElBQVA7QUFDQTs7QUFFTSxTQUFTVyxTQUFULENBQW9CQyxLQUFwQixFQUE0QjtBQUNsQyxTQUFPQSxLQUFLLEdBQ1gsQ0FBRSxDQUFGLEVBQUssRUFBTCxFQUFTLENBQVQsRUFBWSxFQUFaLEVBQWdCLEVBQWhCLEVBQW9CLENBQXBCLEVBQXVCLENBQXZCLEVBQTBCLENBQTFCLEVBQTZCLEVBQTdCLENBRFcsR0FFWEMsS0FBSyxDQUFFLEtBQUYsQ0FBTCxDQUFlQyxJQUFmLENBQXFCLENBQXJCLEVBQXlCQyxHQUF6QixDQUE4QjtBQUFBLFdBQU1DLElBQUksQ0FBQ0MsS0FBTCxDQUFZRCxJQUFJLENBQUNFLE1BQUwsS0FBZ0IsS0FBNUIsQ0FBTjtBQUFBLEdBQTlCLENBRkQ7QUFHQSxDLENBRUQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2FwcHkvUUkvanMtc2FtcGxlcy9hbGdvczIvIiwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgZnVuY3Rpb24gc3dhcCggYXIsIGksIGogKSB7XG5cdGNvbnN0IHRtcCA9IGFyWyBpIF07XG5cdGFyWyBpIF0gPSBhclsgaiBdO1xuXHRhclsgaiBdID0gdG1wO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNHcmVhdGVyKCBhLCBiICkge1xuXHRyZXR1cm4gYSA+IGI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlKCBhLCBiICkge1xuXHRyZXR1cm4gYSAtIGI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGVja1NvcnRlZCggZGF0YSwgY29tcGFyZSApIHtcblx0Y29tcGFyZSA9IGNvbXBhcmUgfHwgaXNHcmVhdGVyO1xuXHRjb25zdCBsYXN0ID0gZGF0YS5sZW5ndGggLSAxO1xuXHRmb3IgKCBsZXQgaSA9IDA7IGkgPCBsYXN0OyBpKysgKSB7XG5cdFx0aWYgKCBpc0dyZWF0ZXIoIGRhdGFbIGkgXSwgZGF0YVsgaSArIDEgXSApICkge1xuXHRcdFx0dGhyb3cgXCJEYXRhIGlzIE5PVCBzb3J0ZWQgQCBpbmRleCBcIiArIGk7XG5cdFx0fVxuXHR9XG5cdHJldHVybiB0cnVlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWFrZUFycmF5KCBzbWFsbCApIHtcblx0cmV0dXJuIHNtYWxsID9cblx0XHRbIDEsIDgzLCAzLCA5NywgMzEsIDQsIDYsIDEsIDEwIF0gOlxuXHRcdEFycmF5KCAzMDAwMCApLmZpbGwoIDAgKS5tYXAoICgpID0+IE1hdGguZmxvb3IoIE1hdGgucmFuZG9tKCkgKiAxMDAwMCApICk7XG59XG5cbi8vQiBjb25zb2xlLmxvZyhtYWtlQXJyYXkoKSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "swap",
        "ar",
        "i",
        "j",
        "tmp",
        "isGreater",
        "a",
        "b",
        "compare",
        "checkSorted",
        "data",
        "last",
        "length",
        "makeArray",
        "small",
        "Array",
        "fill",
        "map",
        "Math",
        "floor",
        "random"
      ],
      "mappings": ";;;;;;;;;;;AACO,SAASA,IAAT,CAAeC,EAAf,EAAmBC,CAAnB,EAAsBC,CAAtB,EAA0B;AAChC,MAAMC,GAAG,GAAGH,EAAE,CAAEC,CAAF,CAAd;AACAD,EAAAA,EAAE,CAAEC,CAAF,CAAF,GAAUD,EAAE,CAAEE,CAAF,CAAZ;AACAF,EAAAA,EAAE,CAAEE,CAAF,CAAF,GAAUC,GAAV;AACA;;AAEM,SAASC,SAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA2B;AACjC,SAAOD,CAAC,GAAGC,CAAX;AACA;;AAEM,SAASC,OAAT,CAAkBF,CAAlB,EAAqBC,CAArB,EAAyB;AAC/B,SAAOD,CAAC,GAAGC,CAAX;AACA;;AAEM,SAASE,WAAT,CAAsBC,IAAtB,EAA4BF,OAA5B,EAAsC;AAC5CA,EAAAA,OAAO,GAAGA,OAAO,IAAIH,SAArB;AACA,MAAMM,IAAI,GAAGD,IAAI,CAACE,MAAL,GAAc,CAA3B;;AACA,OAAM,IAAIV,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGS,IAArB,EAA2BT,CAAC,EAA5B,EAAiC;AAChC,QAAKG,SAAS,CAAEK,IAAI,CAAER,CAAF,CAAN,EAAaQ,IAAI,CAAER,CAAC,GAAG,CAAN,CAAjB,CAAd,EAA6C;AAC5C,YAAM,gCAAgCA,CAAtC;AACA;AACD;;AACD,SAAO,IAAP;AACA;;AAEM,SAASW,SAAT,CAAoBC,KAApB,EAA4B;AAClC,SAAOA,KAAK,GACX,CAAE,CAAF,EAAK,EAAL,EAAS,CAAT,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,EAA7B,CADW,GAEXC,KAAK,CAAE,KAAF,CAAL,CAAeC,IAAf,CAAqB,CAArB,EAAyBC,GAAzB,CAA8B;AAAA,WAAMC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,KAA5B,CAAN;AAAA,GAA9B,CAFD;AAGA,C,CAED",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "sourcesContent": [
        "\nexport function swap( ar, i, j ) {\n\tconst tmp = ar[ i ];\n\tar[ i ] = ar[ j ];\n\tar[ j ] = tmp;\n}\n\nexport function isGreater( a, b ) {\n\treturn a > b;\n}\n\nexport function compare( a, b ) {\n\treturn a - b;\n}\n\nexport function checkSorted( data, compare ) {\n\tcompare = compare || isGreater;\n\tconst last = data.length - 1;\n\tfor ( let i = 0; i < last; i++ ) {\n\t\tif ( isGreater( data[ i ], data[ i + 1 ] ) ) {\n\t\t\tthrow \"Data is NOT sorted @ index \" + i;\n\t\t}\n\t}\n\treturn true;\n}\n\nexport function makeArray( small ) {\n\treturn small ?\n\t\t[ 1, 83, 3, 97, 31, 4, 6, 1, 10 ] :\n\t\tArray( 30000 ).fill( 0 ).map( () => Math.floor( Math.random() * 10000 ) );\n}\n\n//B console.log(makeArray());\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590724181996
  },
  "{\"sourceMaps\":\"both\",\"sourceRoot\":\"/Users/appy/QI/js-samples/algos2/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/appy/QI/js-samples/algos2\",\"filename\":\"/Users/appy/QI/js-samples/algos2/mergeSort.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/appy/QI/js-samples/algos2\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.1": {
    "metadata": {},
    "options": {
      "sourceMaps": "both",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/appy/QI/js-samples/algos2",
      "filename": "/Users/appy/QI/js-samples/algos2/mergeSort.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/appy/QI/js-samples/algos2",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/appy/QI/js-samples/algos2/mergeSort.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/appy/QI/js-samples/algos2/mergeSort.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
        "sourceFileName": "mergeSort.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar UTILS = _interopRequireWildcard(require(\"./utils\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n\"use strict\";\n\nfunction merge(data, start, mid, end, compare, swap, stats) {\n  var lhs = start,\n      rhs = mid;\n\n  for (var i = start; i < end && lhs < mid; i++) {\n    if (rhs < end) {\n      stats.nComps++;\n      stats.temp[i] = compare(data[lhs], data[rhs]) > 0 ? data[rhs++] : data[lhs++];\n    } else {\n      stats.temp[i] = data[lhs++];\n    }\n  }\n\n  for (var _i = start; _i < rhs; _i++) {\n    data[_i] = stats.temp[_i];\n  }\n\n  stats.nWrites += 2 * (rhs - start);\n}\n\nfunction sort(data, start, end, compare, swap, stats) {\n  start = start || 0;\n  end = end || data.length;\n  compare = compare || UTILS.compare;\n  swap = swap || UTILS.swap;\n  stats = stats || {\n    nComps: 0,\n    nWrites: 0,\n    temp: Array(data.length)\n  }; //C console.log( \"sort( \" + start + \", \" + end + \")\" );\n\n  var len = end - start;\n\n  if (len > 1) {\n    var mid = end + start >>> 1;\n    sort(data, start, mid, compare, swap);\n    sort(data, mid, end, compare, swap);\n    merge(data, start, mid, end, compare, swap, stats);\n  }\n\n  return stats;\n}\n\nvar arr = UTILS.makeArray();\nconsole.time(\"MergeSort\");\nvar stats = sort(arr);\nconsole.timeEnd(\"MergeSort\");\nconsole.log(arr.slice(0, 5) + \" ... \" + arr.slice(-5));\nconsole.log(\"Sorted:\" + UTILS.checkSorted(arr));\nconsole.log(\"#writes=\" + stats.nWrites + \" #compares=\" + stats.nComps);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lcmdlU29ydC5qcyJdLCJuYW1lcyI6WyJtZXJnZSIsImRhdGEiLCJzdGFydCIsIm1pZCIsImVuZCIsImNvbXBhcmUiLCJzd2FwIiwic3RhdHMiLCJsaHMiLCJyaHMiLCJpIiwibkNvbXBzIiwidGVtcCIsIm5Xcml0ZXMiLCJzb3J0IiwibGVuZ3RoIiwiVVRJTFMiLCJBcnJheSIsImxlbiIsImFyciIsIm1ha2VBcnJheSIsImNvbnNvbGUiLCJ0aW1lIiwidGltZUVuZCIsImxvZyIsInNsaWNlIiwiY2hlY2tTb3J0ZWQiXSwibWFwcGluZ3MiOiI7Ozs7QUFDQTs7Ozs7O0FBRUE7O0FBRUEsU0FBU0EsS0FBVCxDQUFnQkMsSUFBaEIsRUFBc0JDLEtBQXRCLEVBQTZCQyxHQUE3QixFQUFrQ0MsR0FBbEMsRUFBdUNDLE9BQXZDLEVBQWdEQyxJQUFoRCxFQUFzREMsS0FBdEQsRUFBOEQ7QUFDN0QsTUFBSUMsR0FBRyxHQUFHTixLQUFWO0FBQUEsTUFBaUJPLEdBQUcsR0FBR04sR0FBdkI7O0FBRUEsT0FBTSxJQUFJTyxDQUFDLEdBQUdSLEtBQWQsRUFBcUJRLENBQUMsR0FBR04sR0FBSixJQUFhSSxHQUFHLEdBQUdMLEdBQXhDLEVBQTZDTyxDQUFDLEVBQTlDLEVBQW1EO0FBQ2xELFFBQUtELEdBQUcsR0FBR0wsR0FBWCxFQUFpQjtBQUNoQkcsTUFBQUEsS0FBSyxDQUFDSSxNQUFOO0FBQ0FKLE1BQUFBLEtBQUssQ0FBQ0ssSUFBTixDQUFZRixDQUFaLElBQWtCTCxPQUFPLENBQUVKLElBQUksQ0FBRU8sR0FBRixDQUFOLEVBQWVQLElBQUksQ0FBRVEsR0FBRixDQUFuQixDQUFQLEdBQXNDLENBQXRDLEdBQTBDUixJQUFJLENBQUVRLEdBQUcsRUFBTCxDQUE5QyxHQUEwRFIsSUFBSSxDQUFFTyxHQUFHLEVBQUwsQ0FBaEY7QUFDQSxLQUhELE1BR087QUFDTkQsTUFBQUEsS0FBSyxDQUFDSyxJQUFOLENBQVlGLENBQVosSUFBa0JULElBQUksQ0FBRU8sR0FBRyxFQUFMLENBQXRCO0FBQ0E7QUFDRDs7QUFFRCxPQUFNLElBQUlFLEVBQUMsR0FBR1IsS0FBZCxFQUFxQlEsRUFBQyxHQUFHRCxHQUF6QixFQUE4QkMsRUFBQyxFQUEvQixFQUFvQztBQUNuQ1QsSUFBQUEsSUFBSSxDQUFFUyxFQUFGLENBQUosR0FBWUgsS0FBSyxDQUFDSyxJQUFOLENBQVlGLEVBQVosQ0FBWjtBQUNBOztBQUNESCxFQUFBQSxLQUFLLENBQUNNLE9BQU4sSUFBaUIsS0FBTUosR0FBRyxHQUFHUCxLQUFaLENBQWpCO0FBQ0E7O0FBRUQsU0FBU1ksSUFBVCxDQUFlYixJQUFmLEVBQXFCQyxLQUFyQixFQUE0QkUsR0FBNUIsRUFBaUNDLE9BQWpDLEVBQTBDQyxJQUExQyxFQUFnREMsS0FBaEQsRUFBd0Q7QUFDdkRMLEVBQUFBLEtBQUssR0FBR0EsS0FBSyxJQUFJLENBQWpCO0FBQ0FFLEVBQUFBLEdBQUcsR0FBR0EsR0FBRyxJQUFJSCxJQUFJLENBQUNjLE1BQWxCO0FBQ0FWLEVBQUFBLE9BQU8sR0FBR0EsT0FBTyxJQUFJVyxLQUFLLENBQUNYLE9BQTNCO0FBQ0FDLEVBQUFBLElBQUksR0FBR0EsSUFBSSxJQUFJVSxLQUFLLENBQUNWLElBQXJCO0FBRUFDLEVBQUFBLEtBQUssR0FBR0EsS0FBSyxJQUFJO0FBQUVJLElBQUFBLE1BQU0sRUFBRSxDQUFWO0FBQWFFLElBQUFBLE9BQU8sRUFBRSxDQUF0QjtBQUF5QkQsSUFBQUEsSUFBSSxFQUFFSyxLQUFLLENBQUVoQixJQUFJLENBQUNjLE1BQVA7QUFBcEMsR0FBakIsQ0FOdUQsQ0FRdkQ7O0FBRUEsTUFBSUcsR0FBRyxHQUFHZCxHQUFHLEdBQUdGLEtBQWhCOztBQUNBLE1BQUtnQixHQUFHLEdBQUcsQ0FBWCxFQUFlO0FBQ2QsUUFBTWYsR0FBRyxHQUFLQyxHQUFHLEdBQUdGLEtBQVIsS0FBb0IsQ0FBaEM7QUFFQVksSUFBQUEsSUFBSSxDQUFFYixJQUFGLEVBQVFDLEtBQVIsRUFBZUMsR0FBZixFQUFvQkUsT0FBcEIsRUFBNkJDLElBQTdCLENBQUo7QUFDQVEsSUFBQUEsSUFBSSxDQUFFYixJQUFGLEVBQVFFLEdBQVIsRUFBYUMsR0FBYixFQUFrQkMsT0FBbEIsRUFBMkJDLElBQTNCLENBQUo7QUFDQU4sSUFBQUEsS0FBSyxDQUFFQyxJQUFGLEVBQVFDLEtBQVIsRUFBZUMsR0FBZixFQUFvQkMsR0FBcEIsRUFBeUJDLE9BQXpCLEVBQWtDQyxJQUFsQyxFQUF3Q0MsS0FBeEMsQ0FBTDtBQUNBOztBQUVELFNBQU9BLEtBQVA7QUFDQTs7QUFFRCxJQUFJWSxHQUFHLEdBQUdILEtBQUssQ0FBQ0ksU0FBTixFQUFWO0FBQ0FDLE9BQU8sQ0FBQ0MsSUFBUixDQUFjLFdBQWQ7QUFDQSxJQUFNZixLQUFLLEdBQUdPLElBQUksQ0FBRUssR0FBRixDQUFsQjtBQUNBRSxPQUFPLENBQUNFLE9BQVIsQ0FBaUIsV0FBakI7QUFFQUYsT0FBTyxDQUFDRyxHQUFSLENBQWFMLEdBQUcsQ0FBQ00sS0FBSixDQUFXLENBQVgsRUFBYyxDQUFkLElBQW9CLE9BQXBCLEdBQThCTixHQUFHLENBQUNNLEtBQUosQ0FBVyxDQUFDLENBQVosQ0FBM0M7QUFDQUosT0FBTyxDQUFDRyxHQUFSLENBQWEsWUFBWVIsS0FBSyxDQUFDVSxXQUFOLENBQW1CUCxHQUFuQixDQUF6QjtBQUNBRSxPQUFPLENBQUNHLEdBQVIsQ0FBYSxhQUFhakIsS0FBSyxDQUFDTSxPQUFuQixHQUE2QixhQUE3QixHQUE2Q04sS0FBSyxDQUFDSSxNQUFoRSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXBweS9RSS9qcy1zYW1wbGVzL2FsZ29zMi8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCAqIGFzIFVUSUxTIGZyb20gXCIuL3V0aWxzXCI7XG5cblwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBtZXJnZSggZGF0YSwgc3RhcnQsIG1pZCwgZW5kLCBjb21wYXJlLCBzd2FwLCBzdGF0cyApIHtcblx0bGV0IGxocyA9IHN0YXJ0LCByaHMgPSBtaWQ7XG5cblx0Zm9yICggbGV0IGkgPSBzdGFydDsgaSA8IGVuZCAgJiYgIGxocyA8IG1pZDsgaSsrICkge1xuXHRcdGlmICggcmhzIDwgZW5kICkge1xuXHRcdFx0c3RhdHMubkNvbXBzKys7XG5cdFx0XHRzdGF0cy50ZW1wWyBpIF0gPSBjb21wYXJlKCBkYXRhWyBsaHMgXSwgZGF0YVsgcmhzIF0gKSA+IDAgPyBkYXRhWyByaHMrKyBdIDogZGF0YVsgbGhzKysgXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3RhdHMudGVtcFsgaSBdID0gZGF0YVsgbGhzKysgXTtcblx0XHR9XG5cdH1cblxuXHRmb3IgKCBsZXQgaSA9IHN0YXJ0OyBpIDwgcmhzOyBpKysgKSB7XG5cdFx0ZGF0YVsgaSBdID0gc3RhdHMudGVtcFsgaSBdO1xuXHR9XG5cdHN0YXRzLm5Xcml0ZXMgKz0gMiAqICggcmhzIC0gc3RhcnQgKTtcbn1cblxuZnVuY3Rpb24gc29ydCggZGF0YSwgc3RhcnQsIGVuZCwgY29tcGFyZSwgc3dhcCwgc3RhdHMgKSB7XG5cdHN0YXJ0ID0gc3RhcnQgfHwgMDtcblx0ZW5kID0gZW5kIHx8IGRhdGEubGVuZ3RoO1xuXHRjb21wYXJlID0gY29tcGFyZSB8fCBVVElMUy5jb21wYXJlO1xuXHRzd2FwID0gc3dhcCB8fCBVVElMUy5zd2FwO1xuXG5cdHN0YXRzID0gc3RhdHMgfHwgeyBuQ29tcHM6IDAsIG5Xcml0ZXM6IDAsIHRlbXA6IEFycmF5KCBkYXRhLmxlbmd0aCApIH07XG5cblx0Ly9DIGNvbnNvbGUubG9nKCBcInNvcnQoIFwiICsgc3RhcnQgKyBcIiwgXCIgKyBlbmQgKyBcIilcIiApO1xuXG5cdGxldCBsZW4gPSBlbmQgLSBzdGFydDtcblx0aWYgKCBsZW4gPiAxICkge1xuXHRcdGNvbnN0IG1pZCA9ICggZW5kICsgc3RhcnQgKSA+Pj4gMTtcblxuXHRcdHNvcnQoIGRhdGEsIHN0YXJ0LCBtaWQsIGNvbXBhcmUsIHN3YXAgKTtcblx0XHRzb3J0KCBkYXRhLCBtaWQsIGVuZCwgY29tcGFyZSwgc3dhcCApO1xuXHRcdG1lcmdlKCBkYXRhLCBzdGFydCwgbWlkLCBlbmQsIGNvbXBhcmUsIHN3YXAsIHN0YXRzICk7XG5cdH1cblxuXHRyZXR1cm4gc3RhdHM7XG59XG5cbmxldCBhcnIgPSBVVElMUy5tYWtlQXJyYXkoKTtcbmNvbnNvbGUudGltZSggXCJNZXJnZVNvcnRcIiApO1xuY29uc3Qgc3RhdHMgPSBzb3J0KCBhcnIgKTtcbmNvbnNvbGUudGltZUVuZCggXCJNZXJnZVNvcnRcIiApO1xuXG5jb25zb2xlLmxvZyggYXJyLnNsaWNlKCAwLCA1ICkgKyBcIiAuLi4gXCIgKyBhcnIuc2xpY2UoIC01ICkgKTtcbmNvbnNvbGUubG9nKCBcIlNvcnRlZDpcIiArIFVUSUxTLmNoZWNrU29ydGVkKCBhcnIgKSApO1xuY29uc29sZS5sb2coIFwiI3dyaXRlcz1cIiArIHN0YXRzLm5Xcml0ZXMgKyBcIiAjY29tcGFyZXM9XCIgKyBzdGF0cy5uQ29tcHMgKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "mergeSort.js"
      ],
      "names": [
        "merge",
        "data",
        "start",
        "mid",
        "end",
        "compare",
        "swap",
        "stats",
        "lhs",
        "rhs",
        "i",
        "nComps",
        "temp",
        "nWrites",
        "sort",
        "length",
        "UTILS",
        "Array",
        "len",
        "arr",
        "makeArray",
        "console",
        "time",
        "timeEnd",
        "log",
        "slice",
        "checkSorted"
      ],
      "mappings": ";;;;AACA;;;;;;AAEA;;AAEA,SAASA,KAAT,CAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCC,OAAvC,EAAgDC,IAAhD,EAAsDC,KAAtD,EAA8D;AAC7D,MAAIC,GAAG,GAAGN,KAAV;AAAA,MAAiBO,GAAG,GAAGN,GAAvB;;AAEA,OAAM,IAAIO,CAAC,GAAGR,KAAd,EAAqBQ,CAAC,GAAGN,GAAJ,IAAaI,GAAG,GAAGL,GAAxC,EAA6CO,CAAC,EAA9C,EAAmD;AAClD,QAAKD,GAAG,GAAGL,GAAX,EAAiB;AAChBG,MAAAA,KAAK,CAACI,MAAN;AACAJ,MAAAA,KAAK,CAACK,IAAN,CAAYF,CAAZ,IAAkBL,OAAO,CAAEJ,IAAI,CAAEO,GAAF,CAAN,EAAeP,IAAI,CAAEQ,GAAF,CAAnB,CAAP,GAAsC,CAAtC,GAA0CR,IAAI,CAAEQ,GAAG,EAAL,CAA9C,GAA0DR,IAAI,CAAEO,GAAG,EAAL,CAAhF;AACA,KAHD,MAGO;AACND,MAAAA,KAAK,CAACK,IAAN,CAAYF,CAAZ,IAAkBT,IAAI,CAAEO,GAAG,EAAL,CAAtB;AACA;AACD;;AAED,OAAM,IAAIE,EAAC,GAAGR,KAAd,EAAqBQ,EAAC,GAAGD,GAAzB,EAA8BC,EAAC,EAA/B,EAAoC;AACnCT,IAAAA,IAAI,CAAES,EAAF,CAAJ,GAAYH,KAAK,CAACK,IAAN,CAAYF,EAAZ,CAAZ;AACA;;AACDH,EAAAA,KAAK,CAACM,OAAN,IAAiB,KAAMJ,GAAG,GAAGP,KAAZ,CAAjB;AACA;;AAED,SAASY,IAAT,CAAeb,IAAf,EAAqBC,KAArB,EAA4BE,GAA5B,EAAiCC,OAAjC,EAA0CC,IAA1C,EAAgDC,KAAhD,EAAwD;AACvDL,EAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;AACAE,EAAAA,GAAG,GAAGA,GAAG,IAAIH,IAAI,CAACc,MAAlB;AACAV,EAAAA,OAAO,GAAGA,OAAO,IAAIW,KAAK,CAACX,OAA3B;AACAC,EAAAA,IAAI,GAAGA,IAAI,IAAIU,KAAK,CAACV,IAArB;AAEAC,EAAAA,KAAK,GAAGA,KAAK,IAAI;AAAEI,IAAAA,MAAM,EAAE,CAAV;AAAaE,IAAAA,OAAO,EAAE,CAAtB;AAAyBD,IAAAA,IAAI,EAAEK,KAAK,CAAEhB,IAAI,CAACc,MAAP;AAApC,GAAjB,CANuD,CAQvD;;AAEA,MAAIG,GAAG,GAAGd,GAAG,GAAGF,KAAhB;;AACA,MAAKgB,GAAG,GAAG,CAAX,EAAe;AACd,QAAMf,GAAG,GAAKC,GAAG,GAAGF,KAAR,KAAoB,CAAhC;AAEAY,IAAAA,IAAI,CAAEb,IAAF,EAAQC,KAAR,EAAeC,GAAf,EAAoBE,OAApB,EAA6BC,IAA7B,CAAJ;AACAQ,IAAAA,IAAI,CAAEb,IAAF,EAAQE,GAAR,EAAaC,GAAb,EAAkBC,OAAlB,EAA2BC,IAA3B,CAAJ;AACAN,IAAAA,KAAK,CAAEC,IAAF,EAAQC,KAAR,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,OAAzB,EAAkCC,IAAlC,EAAwCC,KAAxC,CAAL;AACA;;AAED,SAAOA,KAAP;AACA;;AAED,IAAIY,GAAG,GAAGH,KAAK,CAACI,SAAN,EAAV;AACAC,OAAO,CAACC,IAAR,CAAc,WAAd;AACA,IAAMf,KAAK,GAAGO,IAAI,CAAEK,GAAF,CAAlB;AACAE,OAAO,CAACE,OAAR,CAAiB,WAAjB;AAEAF,OAAO,CAACG,GAAR,CAAaL,GAAG,CAACM,KAAJ,CAAW,CAAX,EAAc,CAAd,IAAoB,OAApB,GAA8BN,GAAG,CAACM,KAAJ,CAAW,CAAC,CAAZ,CAA3C;AACAJ,OAAO,CAACG,GAAR,CAAa,YAAYR,KAAK,CAACU,WAAN,CAAmBP,GAAnB,CAAzB;AACAE,OAAO,CAACG,GAAR,CAAa,aAAajB,KAAK,CAACM,OAAnB,GAA6B,aAA7B,GAA6CN,KAAK,CAACI,MAAhE",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "sourcesContent": [
        "\nimport * as UTILS from \"./utils\";\n\n\"use strict\";\n\nfunction merge( data, start, mid, end, compare, swap, stats ) {\n\tlet lhs = start, rhs = mid;\n\n\tfor ( let i = start; i < end  &&  lhs < mid; i++ ) {\n\t\tif ( rhs < end ) {\n\t\t\tstats.nComps++;\n\t\t\tstats.temp[ i ] = compare( data[ lhs ], data[ rhs ] ) > 0 ? data[ rhs++ ] : data[ lhs++ ];\n\t\t} else {\n\t\t\tstats.temp[ i ] = data[ lhs++ ];\n\t\t}\n\t}\n\n\tfor ( let i = start; i < rhs; i++ ) {\n\t\tdata[ i ] = stats.temp[ i ];\n\t}\n\tstats.nWrites += 2 * ( rhs - start );\n}\n\nfunction sort( data, start, end, compare, swap, stats ) {\n\tstart = start || 0;\n\tend = end || data.length;\n\tcompare = compare || UTILS.compare;\n\tswap = swap || UTILS.swap;\n\n\tstats = stats || { nComps: 0, nWrites: 0, temp: Array( data.length ) };\n\n\t//C console.log( \"sort( \" + start + \", \" + end + \")\" );\n\n\tlet len = end - start;\n\tif ( len > 1 ) {\n\t\tconst mid = ( end + start ) >>> 1;\n\n\t\tsort( data, start, mid, compare, swap );\n\t\tsort( data, mid, end, compare, swap );\n\t\tmerge( data, start, mid, end, compare, swap, stats );\n\t}\n\n\treturn stats;\n}\n\nlet arr = UTILS.makeArray();\nconsole.time( \"MergeSort\" );\nconst stats = sort( arr );\nconsole.timeEnd( \"MergeSort\" );\n\nconsole.log( arr.slice( 0, 5 ) + \" ... \" + arr.slice( -5 ) );\nconsole.log( \"Sorted:\" + UTILS.checkSorted( arr ) );\nconsole.log( \"#writes=\" + stats.nWrites + \" #compares=\" + stats.nComps );\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590620172960
  },
  "{\"sourceMaps\":\"both\",\"sourceRoot\":\"/Users/appy/QI/js-samples/algos2/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/appy/QI/js-samples/algos2\",\"filename\":\"/Users/appy/QI/js-samples/algos2/quickSort.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/appy/QI/js-samples/algos2\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.1": {
    "metadata": {},
    "options": {
      "sourceMaps": "both",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/appy/QI/js-samples/algos2",
      "filename": "/Users/appy/QI/js-samples/algos2/quickSort.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/appy/QI/js-samples/algos2",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/appy/QI/js-samples/algos2/quickSort.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/appy/QI/js-samples/algos2/quickSort.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
        "sourceFileName": "quickSort.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar UTILS = _interopRequireWildcard(require(\"./utils\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n\"use strict\";\n\nfunction partition(data, start, end, compare, swap, stats) {\n  var pivot = data[end - 1]; //Last Element as Pivot\n\n  var pIndex = 0;\n\n  for (var i = 0; i < end; i++) {\n    if (data[i] <= pivot) {\n      swap(data, i, pIndex++);\n      stats.nWrites += 2;\n    }\n  }\n\n  stats.nComps += end;\n  return pIndex - 1; //The new pivot index\n}\n\nfunction sort(data, start, end, compare, swap, stats) {\n  if (start >= end) {\n    return;\n  }\n\n  start = start || 0;\n  end = end || data.length;\n  compare = compare || UTILS.compare;\n  swap = swap || UTILS.swap;\n  stats = stats || {\n    nComps: 0,\n    nWrites: 0\n  };\n  var pIndex = partition(data, start, end, compare, swap, stats);\n  sort(data, start, pIndex, compare, swap, stats);\n  sort(data, pIndex + 1, end, compare, swap, stats);\n  return stats;\n}\n\nvar arr = UTILS.makeArray();\nconsole.time(\"QuickSort\");\nvar stats = sort(arr);\nconsole.timeEnd(\"QuickSort\");\nconsole.log(arr.slice(0, 5) + \" ... \" + arr.slice(-5));\nconsole.log(\"Sorted:\" + UTILS.checkSorted(arr));\nconsole.log(\"#writes=\" + stats.nWrites + \" #compares=\" + stats.nComps);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1aWNrU29ydC5qcyJdLCJuYW1lcyI6WyJwYXJ0aXRpb24iLCJkYXRhIiwic3RhcnQiLCJlbmQiLCJjb21wYXJlIiwic3dhcCIsInN0YXRzIiwicGl2b3QiLCJwSW5kZXgiLCJpIiwibldyaXRlcyIsIm5Db21wcyIsInNvcnQiLCJsZW5ndGgiLCJVVElMUyIsImFyciIsIm1ha2VBcnJheSIsImNvbnNvbGUiLCJ0aW1lIiwidGltZUVuZCIsImxvZyIsInNsaWNlIiwiY2hlY2tTb3J0ZWQiXSwibWFwcGluZ3MiOiI7Ozs7QUFDQTs7Ozs7O0FBRUE7O0FBRUEsU0FBU0EsU0FBVCxDQUFvQkMsSUFBcEIsRUFBMEJDLEtBQTFCLEVBQWlDQyxHQUFqQyxFQUFzQ0MsT0FBdEMsRUFBK0NDLElBQS9DLEVBQXFEQyxLQUFyRCxFQUE2RDtBQUU1RCxNQUFJQyxLQUFLLEdBQUdOLElBQUksQ0FBRUUsR0FBRyxHQUFHLENBQVIsQ0FBaEIsQ0FGNEQsQ0FFL0I7O0FBQzdCLE1BQUlLLE1BQU0sR0FBRyxDQUFiOztBQUNBLE9BQU0sSUFBSUMsQ0FBQyxHQUFHLENBQWQsRUFBaUJBLENBQUMsR0FBR04sR0FBckIsRUFBMEJNLENBQUMsRUFBM0IsRUFBZ0M7QUFDL0IsUUFBS1IsSUFBSSxDQUFFUSxDQUFGLENBQUosSUFBYUYsS0FBbEIsRUFBMEI7QUFDekJGLE1BQUFBLElBQUksQ0FBRUosSUFBRixFQUFRUSxDQUFSLEVBQVdELE1BQU0sRUFBakIsQ0FBSjtBQUNBRixNQUFBQSxLQUFLLENBQUNJLE9BQU4sSUFBZSxDQUFmO0FBQ0E7QUFDRDs7QUFDREosRUFBQUEsS0FBSyxDQUFDSyxNQUFOLElBQWdCUixHQUFoQjtBQUNBLFNBQU9LLE1BQU0sR0FBRyxDQUFoQixDQVg0RCxDQVd6QztBQUNuQjs7QUFFRCxTQUFTSSxJQUFULENBQWVYLElBQWYsRUFBcUJDLEtBQXJCLEVBQTRCQyxHQUE1QixFQUFpQ0MsT0FBakMsRUFBMENDLElBQTFDLEVBQWdEQyxLQUFoRCxFQUF3RDtBQUN2RCxNQUFLSixLQUFLLElBQUlDLEdBQWQsRUFBb0I7QUFDbkI7QUFDQTs7QUFDREQsRUFBQUEsS0FBSyxHQUFHQSxLQUFLLElBQUksQ0FBakI7QUFDQUMsRUFBQUEsR0FBRyxHQUFHQSxHQUFHLElBQUlGLElBQUksQ0FBQ1ksTUFBbEI7QUFDQVQsRUFBQUEsT0FBTyxHQUFHQSxPQUFPLElBQUlVLEtBQUssQ0FBQ1YsT0FBM0I7QUFDQUMsRUFBQUEsSUFBSSxHQUFHQSxJQUFJLElBQUlTLEtBQUssQ0FBQ1QsSUFBckI7QUFFQUMsRUFBQUEsS0FBSyxHQUFHQSxLQUFLLElBQUk7QUFBRUssSUFBQUEsTUFBTSxFQUFFLENBQVY7QUFBYUQsSUFBQUEsT0FBTyxFQUFFO0FBQXRCLEdBQWpCO0FBQ0EsTUFBTUYsTUFBTSxHQUFHUixTQUFTLENBQUVDLElBQUYsRUFBUUMsS0FBUixFQUFlQyxHQUFmLEVBQW9CQyxPQUFwQixFQUE2QkMsSUFBN0IsRUFBbUNDLEtBQW5DLENBQXhCO0FBQ0FNLEVBQUFBLElBQUksQ0FBRVgsSUFBRixFQUFRQyxLQUFSLEVBQWVNLE1BQWYsRUFBdUJKLE9BQXZCLEVBQWdDQyxJQUFoQyxFQUFzQ0MsS0FBdEMsQ0FBSjtBQUNBTSxFQUFBQSxJQUFJLENBQUVYLElBQUYsRUFBUU8sTUFBTSxHQUFHLENBQWpCLEVBQW9CTCxHQUFwQixFQUF5QkMsT0FBekIsRUFBa0NDLElBQWxDLEVBQXdDQyxLQUF4QyxDQUFKO0FBRUEsU0FBT0EsS0FBUDtBQUNBOztBQUVELElBQUlTLEdBQUcsR0FBR0QsS0FBSyxDQUFDRSxTQUFOLEVBQVY7QUFDQUMsT0FBTyxDQUFDQyxJQUFSLENBQWMsV0FBZDtBQUNBLElBQU1aLEtBQUssR0FBR00sSUFBSSxDQUFFRyxHQUFGLENBQWxCO0FBQ0FFLE9BQU8sQ0FBQ0UsT0FBUixDQUFpQixXQUFqQjtBQUVBRixPQUFPLENBQUNHLEdBQVIsQ0FBYUwsR0FBRyxDQUFDTSxLQUFKLENBQVcsQ0FBWCxFQUFjLENBQWQsSUFBb0IsT0FBcEIsR0FBOEJOLEdBQUcsQ0FBQ00sS0FBSixDQUFXLENBQUMsQ0FBWixDQUEzQztBQUNBSixPQUFPLENBQUNHLEdBQVIsQ0FBYSxZQUFZTixLQUFLLENBQUNRLFdBQU4sQ0FBbUJQLEdBQW5CLENBQXpCO0FBQ0FFLE9BQU8sQ0FBQ0csR0FBUixDQUFhLGFBQWFkLEtBQUssQ0FBQ0ksT0FBbkIsR0FBNkIsYUFBN0IsR0FBNkNKLEtBQUssQ0FBQ0ssTUFBaEUiLCJzb3VyY2VSb290IjoiL1VzZXJzL2FwcHkvUUkvanMtc2FtcGxlcy9hbGdvczIvIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgKiBhcyBVVElMUyBmcm9tIFwiLi91dGlsc1wiO1xuXG5cInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gcGFydGl0aW9uKCBkYXRhLCBzdGFydCwgZW5kLCBjb21wYXJlLCBzd2FwLCBzdGF0cyApIHtcblxuXHRsZXQgcGl2b3QgPSBkYXRhWyBlbmQgLSAxIF07IC8vTGFzdCBFbGVtZW50IGFzIFBpdm90XG5cdGxldCBwSW5kZXggPSAwO1xuXHRmb3IgKCBsZXQgaSA9IDA7IGkgPCBlbmQ7IGkrKyApIHtcblx0XHRpZiAoIGRhdGFbIGkgXSA8PSBwaXZvdCApIHtcblx0XHRcdHN3YXAoIGRhdGEsIGksIHBJbmRleCsrICk7XG5cdFx0XHRzdGF0cy5uV3JpdGVzKz0yO1xuXHRcdH1cblx0fVxuXHRzdGF0cy5uQ29tcHMgKz0gZW5kO1xuXHRyZXR1cm4gcEluZGV4IC0gMTsgLy9UaGUgbmV3IHBpdm90IGluZGV4XG59XG5cbmZ1bmN0aW9uIHNvcnQoIGRhdGEsIHN0YXJ0LCBlbmQsIGNvbXBhcmUsIHN3YXAsIHN0YXRzICkge1xuXHRpZiAoIHN0YXJ0ID49IGVuZCApIHtcblx0XHRyZXR1cm47XG5cdH1cblx0c3RhcnQgPSBzdGFydCB8fCAwO1xuXHRlbmQgPSBlbmQgfHwgZGF0YS5sZW5ndGg7XG5cdGNvbXBhcmUgPSBjb21wYXJlIHx8IFVUSUxTLmNvbXBhcmU7XG5cdHN3YXAgPSBzd2FwIHx8IFVUSUxTLnN3YXA7XG5cblx0c3RhdHMgPSBzdGF0cyB8fCB7IG5Db21wczogMCwgbldyaXRlczogMCB9O1xuXHRjb25zdCBwSW5kZXggPSBwYXJ0aXRpb24oIGRhdGEsIHN0YXJ0LCBlbmQsIGNvbXBhcmUsIHN3YXAsIHN0YXRzICk7XG5cdHNvcnQoIGRhdGEsIHN0YXJ0LCBwSW5kZXgsIGNvbXBhcmUsIHN3YXAsIHN0YXRzICk7XG5cdHNvcnQoIGRhdGEsIHBJbmRleCArIDEsIGVuZCwgY29tcGFyZSwgc3dhcCwgc3RhdHMgKTtcblxuXHRyZXR1cm4gc3RhdHM7XG59XG5cbmxldCBhcnIgPSBVVElMUy5tYWtlQXJyYXkoKTtcbmNvbnNvbGUudGltZSggXCJRdWlja1NvcnRcIiApO1xuY29uc3Qgc3RhdHMgPSBzb3J0KCBhcnIgKTtcbmNvbnNvbGUudGltZUVuZCggXCJRdWlja1NvcnRcIiApO1xuXG5jb25zb2xlLmxvZyggYXJyLnNsaWNlKCAwLCA1ICkgKyBcIiAuLi4gXCIgKyBhcnIuc2xpY2UoIC01ICkgKTtcbmNvbnNvbGUubG9nKCBcIlNvcnRlZDpcIiArIFVUSUxTLmNoZWNrU29ydGVkKCBhcnIgKSApO1xuY29uc29sZS5sb2coIFwiI3dyaXRlcz1cIiArIHN0YXRzLm5Xcml0ZXMgKyBcIiAjY29tcGFyZXM9XCIgKyBzdGF0cy5uQ29tcHMgKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "quickSort.js"
      ],
      "names": [
        "partition",
        "data",
        "start",
        "end",
        "compare",
        "swap",
        "stats",
        "pivot",
        "pIndex",
        "i",
        "nWrites",
        "nComps",
        "sort",
        "length",
        "UTILS",
        "arr",
        "makeArray",
        "console",
        "time",
        "timeEnd",
        "log",
        "slice",
        "checkSorted"
      ],
      "mappings": ";;;;AACA;;;;;;AAEA;;AAEA,SAASA,SAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,GAAjC,EAAsCC,OAAtC,EAA+CC,IAA/C,EAAqDC,KAArD,EAA6D;AAE5D,MAAIC,KAAK,GAAGN,IAAI,CAAEE,GAAG,GAAG,CAAR,CAAhB,CAF4D,CAE/B;;AAC7B,MAAIK,MAAM,GAAG,CAAb;;AACA,OAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGN,GAArB,EAA0BM,CAAC,EAA3B,EAAgC;AAC/B,QAAKR,IAAI,CAAEQ,CAAF,CAAJ,IAAaF,KAAlB,EAA0B;AACzBF,MAAAA,IAAI,CAAEJ,IAAF,EAAQQ,CAAR,EAAWD,MAAM,EAAjB,CAAJ;AACAF,MAAAA,KAAK,CAACI,OAAN,IAAe,CAAf;AACA;AACD;;AACDJ,EAAAA,KAAK,CAACK,MAAN,IAAgBR,GAAhB;AACA,SAAOK,MAAM,GAAG,CAAhB,CAX4D,CAWzC;AACnB;;AAED,SAASI,IAAT,CAAeX,IAAf,EAAqBC,KAArB,EAA4BC,GAA5B,EAAiCC,OAAjC,EAA0CC,IAA1C,EAAgDC,KAAhD,EAAwD;AACvD,MAAKJ,KAAK,IAAIC,GAAd,EAAoB;AACnB;AACA;;AACDD,EAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;AACAC,EAAAA,GAAG,GAAGA,GAAG,IAAIF,IAAI,CAACY,MAAlB;AACAT,EAAAA,OAAO,GAAGA,OAAO,IAAIU,KAAK,CAACV,OAA3B;AACAC,EAAAA,IAAI,GAAGA,IAAI,IAAIS,KAAK,CAACT,IAArB;AAEAC,EAAAA,KAAK,GAAGA,KAAK,IAAI;AAAEK,IAAAA,MAAM,EAAE,CAAV;AAAaD,IAAAA,OAAO,EAAE;AAAtB,GAAjB;AACA,MAAMF,MAAM,GAAGR,SAAS,CAAEC,IAAF,EAAQC,KAAR,EAAeC,GAAf,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,KAAnC,CAAxB;AACAM,EAAAA,IAAI,CAAEX,IAAF,EAAQC,KAAR,EAAeM,MAAf,EAAuBJ,OAAvB,EAAgCC,IAAhC,EAAsCC,KAAtC,CAAJ;AACAM,EAAAA,IAAI,CAAEX,IAAF,EAAQO,MAAM,GAAG,CAAjB,EAAoBL,GAApB,EAAyBC,OAAzB,EAAkCC,IAAlC,EAAwCC,KAAxC,CAAJ;AAEA,SAAOA,KAAP;AACA;;AAED,IAAIS,GAAG,GAAGD,KAAK,CAACE,SAAN,EAAV;AACAC,OAAO,CAACC,IAAR,CAAc,WAAd;AACA,IAAMZ,KAAK,GAAGM,IAAI,CAAEG,GAAF,CAAlB;AACAE,OAAO,CAACE,OAAR,CAAiB,WAAjB;AAEAF,OAAO,CAACG,GAAR,CAAaL,GAAG,CAACM,KAAJ,CAAW,CAAX,EAAc,CAAd,IAAoB,OAApB,GAA8BN,GAAG,CAACM,KAAJ,CAAW,CAAC,CAAZ,CAA3C;AACAJ,OAAO,CAACG,GAAR,CAAa,YAAYN,KAAK,CAACQ,WAAN,CAAmBP,GAAnB,CAAzB;AACAE,OAAO,CAACG,GAAR,CAAa,aAAad,KAAK,CAACI,OAAnB,GAA6B,aAA7B,GAA6CJ,KAAK,CAACK,MAAhE",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "sourcesContent": [
        "\nimport * as UTILS from \"./utils\";\n\n\"use strict\";\n\nfunction partition( data, start, end, compare, swap, stats ) {\n\n\tlet pivot = data[ end - 1 ]; //Last Element as Pivot\n\tlet pIndex = 0;\n\tfor ( let i = 0; i < end; i++ ) {\n\t\tif ( data[ i ] <= pivot ) {\n\t\t\tswap( data, i, pIndex++ );\n\t\t\tstats.nWrites+=2;\n\t\t}\n\t}\n\tstats.nComps += end;\n\treturn pIndex - 1; //The new pivot index\n}\n\nfunction sort( data, start, end, compare, swap, stats ) {\n\tif ( start >= end ) {\n\t\treturn;\n\t}\n\tstart = start || 0;\n\tend = end || data.length;\n\tcompare = compare || UTILS.compare;\n\tswap = swap || UTILS.swap;\n\n\tstats = stats || { nComps: 0, nWrites: 0 };\n\tconst pIndex = partition( data, start, end, compare, swap, stats );\n\tsort( data, start, pIndex, compare, swap, stats );\n\tsort( data, pIndex + 1, end, compare, swap, stats );\n\n\treturn stats;\n}\n\nlet arr = UTILS.makeArray();\nconsole.time( \"QuickSort\" );\nconst stats = sort( arr );\nconsole.timeEnd( \"QuickSort\" );\n\nconsole.log( arr.slice( 0, 5 ) + \" ... \" + arr.slice( -5 ) );\nconsole.log( \"Sorted:\" + UTILS.checkSorted( arr ) );\nconsole.log( \"#writes=\" + stats.nWrites + \" #compares=\" + stats.nComps );\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590620367736
  },
  "{\"sourceMaps\":\"both\",\"sourceRoot\":\"/Users/appy/QI/js-samples/algos2/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/appy/QI/js-samples/algos2\",\"filename\":\"/Users/appy/QI/js-samples/algos2/heap.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/appy/QI/js-samples/algos2\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.1": {
    "metadata": {},
    "options": {
      "sourceMaps": "both",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/appy/QI/js-samples/algos2",
      "filename": "/Users/appy/QI/js-samples/algos2/heap.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/appy/QI/js-samples/algos2",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/appy/QI/js-samples/algos2/heap.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/appy/QI/js-samples/algos2/heap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
        "sourceFileName": "heap.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Heap = void 0;\n\nvar UTILS = _interopRequireWildcard(require(\"./utils\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Heap = /*#__PURE__*/function () {\n  function Heap(arr, compare, swap, stats) {\n    _classCallCheck(this, Heap);\n\n    this.heap = arr;\n    this.size = this.heap.length;\n    this.swap = swap || UTILS.swap;\n    this.compare = compare || UTILS.compare;\n    this.stats = stats || {\n      nWrites: 0,\n      nComps: 0\n    };\n    this.buildHeap();\n  }\n\n  _createClass(Heap, [{\n    key: \"getMax\",\n    value: function getMax() {\n      return this.heap[0];\n    }\n  }, {\n    key: \"parent\",\n    value: function parent(i) {\n      return i - 1 >>> 1;\n    }\n  }, {\n    key: \"leftChild\",\n    value: function leftChild(i) {\n      return i * 2 + 1;\n    }\n  }, {\n    key: \"rightChild\",\n    value: function rightChild(i) {\n      return i * 2 + 2;\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(node) {\n      this.heap[this.size] = node;\n      this.size++;\n      var cur = this.size - 1;\n\n      while (cur > 0) {\n        var par = this.parent(cur);\n\n        if (this.compare(this.heap[cur], this.heap[par]) > 0) {\n          // cur.value is > par.value\n          this.swap(this.heap, cur, par);\n          this.stats.nWrites += 2;\n        }\n\n        this.stats.nComps += 2;\n        cur = par;\n      }\n    }\n  }, {\n    key: \"buildHeap\",\n    value: function buildHeap() {\n      for (var i = this.size >>> 1; i >= 0; i--) {\n        this.heapify(i); //this.print();\n      }\n    }\n  }, {\n    key: \"str\",\n    value: function str(i) {\n      return \"[\" + i + \"]=\" + (i < this.size ? this.heap[i] : 'null');\n    }\n  }, {\n    key: \"heapify\",\n    value: function heapify(nth) {\n      if (nth >= 0 && nth < this.size) {\n        var lc = this.leftChild(nth);\n        var rc = this.rightChild(nth);\n        var maxIdx = lc < this.size && this.compare(this.heap[lc], this.heap[nth]) > 0 ? lc : nth;\n        maxIdx = rc < this.size && this.compare(this.heap[rc], this.heap[maxIdx]) > 0 ? rc : maxIdx; //console.log( \"heapify \" + this.str( nth ) + \" lc:\" + this.str( lc ) + \" rc:\" + this.str( rc ) + \"  maxIdx=\" + maxIdx );\n\n        if (maxIdx > nth) {\n          this.swap(this.heap, nth, maxIdx);\n          this.stats.nWrites += 2;\n          this.heapify(maxIdx);\n        }\n\n        this.stats.nComps += 2;\n      }\n    }\n  }, {\n    key: \"sort\",\n    value: function sort() {\n      for (var i = this.size; i > 0; i--) {\n        this.size--;\n        this.swap(this.heap, this.size, 0); //Swap 1st and last element\n\n        this.heapify(0); //this.print();\n      }\n    }\n  }, {\n    key: \"print\",\n    value: function print() {\n      console.log(\"Size=\" + this.size + \"  HEAP=\" + this.heap);\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(i) {\n      if (i < 0 || i >= this.size) {\n        return false;\n      }\n\n      var lc = this.leftChild(i);\n      var rc = this.rightChild(i);\n\n      if (this.compare(this.heap[lc], this.heap[i]) > 0) {\n        throw \"Invalid Heat at  [\" + i + \"]=\" + this.heap[i] + \" and [\" + lc + \"]\" + this.heap[lc];\n      }\n\n      if (this.compare(this.heap[rc], this.heap[i]) > 0) {\n        throw \"Invalid Heat at  [\" + i + \"]=\" + this.heap[i] + \" and [\" + rc + \"]\" + this.heap[rc];\n      }\n\n      this.validate(lc);\n      this.validate(rc);\n      return true;\n    }\n  }]);\n\n  return Heap;\n}();\n/*\nlet arr = UTILS.makeArray();\nvar heap = new Heap( arr );\n\n//arr.forEach( x => heap.insert( x ) );\n\nconsole.log( \"Valid Heap=\" + heap.validate( 0 ) );\nheap.sort();\n*/\n\n\nexports.Heap = Heap;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "heap.js"
      ],
      "names": [
        "Heap",
        "arr",
        "compare",
        "swap",
        "stats",
        "heap",
        "size",
        "length",
        "UTILS",
        "nWrites",
        "nComps",
        "buildHeap",
        "i",
        "node",
        "cur",
        "par",
        "parent",
        "heapify",
        "nth",
        "lc",
        "leftChild",
        "rc",
        "rightChild",
        "maxIdx",
        "console",
        "log",
        "validate"
      ],
      "mappings": ";;;;;;;;;AAAA;;;;;;;;;;;;IAEaA,I;AAEZ,gBAAaC,GAAb,EAAkBC,OAAlB,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAyC;AAAA;;AACxC,SAAKC,IAAL,GAAYJ,GAAZ;AACA,SAAKK,IAAL,GAAY,KAAKD,IAAL,CAAUE,MAAtB;AACA,SAAKJ,IAAL,GAAYA,IAAI,IAAIK,KAAK,CAACL,IAA1B;AACA,SAAKD,OAAL,GAAeA,OAAO,IAAIM,KAAK,CAACN,OAAhC;AACA,SAAKE,KAAL,GAAaA,KAAK,IAAI;AAAEK,MAAAA,OAAO,EAAC,CAAV;AAAaC,MAAAA,MAAM,EAAC;AAApB,KAAtB;AACA,SAAKC,SAAL;AACA;;;;6BAEQ;AACR,aAAO,KAAKN,IAAL,CAAW,CAAX,CAAP;AACA;;;2BAEOO,C,EAAI;AACX,aAASA,CAAC,GAAG,CAAN,KAAc,CAArB;AACA;;;8BAEUA,C,EAAI;AACd,aAAOA,CAAC,GAAG,CAAJ,GAAQ,CAAf;AACA;;;+BAEWA,C,EAAI;AACf,aAAOA,CAAC,GAAG,CAAJ,GAAQ,CAAf;AACA;;;2BAEOC,I,EAAO;AACd,WAAKR,IAAL,CAAW,KAAKC,IAAhB,IAAyBO,IAAzB;AACA,WAAKP,IAAL;AAEA,UAAIQ,GAAG,GAAG,KAAKR,IAAL,GAAY,CAAtB;;AACA,aAAQQ,GAAG,GAAG,CAAd,EAAkB;AACjB,YAAIC,GAAG,GAAG,KAAKC,MAAL,CAAaF,GAAb,CAAV;;AACA,YAAK,KAAKZ,OAAL,CAAc,KAAKG,IAAL,CAAWS,GAAX,CAAd,EAAgC,KAAKT,IAAL,CAAWU,GAAX,CAAhC,IAAqD,CAA1D,EAA8D;AAC7D;AACA,eAAKZ,IAAL,CAAW,KAAKE,IAAhB,EAAsBS,GAAtB,EAA2BC,GAA3B;AACA,eAAKX,KAAL,CAAWK,OAAX,IAAsB,CAAtB;AACA;;AACD,aAAKL,KAAL,CAAWM,MAAX,IAAqB,CAArB;AACAI,QAAAA,GAAG,GAAGC,GAAN;AACA;AACD;;;gCAEW;AACX,WAAM,IAAIH,CAAC,GAAK,KAAKN,IAAL,KAAc,CAA9B,EAAmCM,CAAC,IAAI,CAAxC,EAA2CA,CAAC,EAA5C,EAAiD;AAChD,aAAKK,OAAL,CAAcL,CAAd,EADgD,CAEhD;AACA;AACD;;;wBAEIA,C,EAAI;AACR,aAAO,MAAMA,CAAN,GAAU,IAAV,IAAmBA,CAAC,GAAG,KAAKN,IAAT,GAAiB,KAAKD,IAAL,CAAWO,CAAX,CAAjB,GAAkC,MAArD,CAAP;AACA;;;4BAEQM,G,EAAM;AACd,UAAKA,GAAG,IAAI,CAAP,IAAYA,GAAG,GAAG,KAAKZ,IAA5B,EAAmC;AAClC,YAAIa,EAAE,GAAG,KAAKC,SAAL,CAAgBF,GAAhB,CAAT;AACA,YAAIG,EAAE,GAAG,KAAKC,UAAL,CAAiBJ,GAAjB,CAAT;AACA,YAAIK,MAAM,GAAKJ,EAAE,GAAG,KAAKb,IAAV,IAAkB,KAAKJ,OAAL,CAAc,KAAKG,IAAL,CAAWc,EAAX,CAAd,EAA+B,KAAKd,IAAL,CAAWa,GAAX,CAA/B,IAAoD,CAAxE,GAA8EC,EAA9E,GAAmFD,GAAhG;AACAK,QAAAA,MAAM,GAAKF,EAAE,GAAG,KAAKf,IAAV,IAAkB,KAAKJ,OAAL,CAAc,KAAKG,IAAL,CAAWgB,EAAX,CAAd,EAA+B,KAAKhB,IAAL,CAAWkB,MAAX,CAA/B,IAAuD,CAA3E,GAAiFF,EAAjF,GAAsFE,MAA/F,CAJkC,CAMlC;;AACA,YAAKA,MAAM,GAAGL,GAAd,EAAoB;AACnB,eAAKf,IAAL,CAAW,KAAKE,IAAhB,EAAsBa,GAAtB,EAA2BK,MAA3B;AACA,eAAKnB,KAAL,CAAWK,OAAX,IAAsB,CAAtB;AACA,eAAKQ,OAAL,CAAcM,MAAd;AACA;;AACD,aAAKnB,KAAL,CAAWM,MAAX,IAAqB,CAArB;AACA;AACD;;;2BAEK;AACL,WAAM,IAAIE,CAAC,GAAG,KAAKN,IAAnB,EAAyBM,CAAC,GAAG,CAA7B,EAAgCA,CAAC,EAAjC,EAAsC;AACrC,aAAKN,IAAL;AACA,aAAKH,IAAL,CAAW,KAAKE,IAAhB,EAAsB,KAAKC,IAA3B,EAAiC,CAAjC,EAFqC,CAEC;;AACtC,aAAKW,OAAL,CAAc,CAAd,EAHqC,CAIrC;AACA;AACD;;;4BAEO;AACPO,MAAAA,OAAO,CAACC,GAAR,CAAa,UAAU,KAAKnB,IAAf,GAAsB,SAAtB,GAAkC,KAAKD,IAApD;AACA;;;6BAESO,C,EAAI;AACb,UAAKA,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAI,KAAKN,IAAxB,EAA+B;AAC9B,eAAO,KAAP;AACA;;AAED,UAAIa,EAAE,GAAG,KAAKC,SAAL,CAAgBR,CAAhB,CAAT;AACA,UAAIS,EAAE,GAAG,KAAKC,UAAL,CAAiBV,CAAjB,CAAT;;AAEA,UAAK,KAAKV,OAAL,CAAc,KAAKG,IAAL,CAAWc,EAAX,CAAd,EAA+B,KAAKd,IAAL,CAAWO,CAAX,CAA/B,IAAkD,CAAvD,EAA2D;AAC1D,cAAM,uBAAuBA,CAAvB,GAA2B,IAA3B,GAAkC,KAAKP,IAAL,CAAWO,CAAX,CAAlC,GAAmD,QAAnD,GAA8DO,EAA9D,GAAmE,GAAnE,GAAyE,KAAKd,IAAL,CAAWc,EAAX,CAA/E;AACA;;AACD,UAAK,KAAKjB,OAAL,CAAc,KAAKG,IAAL,CAAWgB,EAAX,CAAd,EAA+B,KAAKhB,IAAL,CAAWO,CAAX,CAA/B,IAAkD,CAAvD,EAA2D;AAC1D,cAAM,uBAAuBA,CAAvB,GAA2B,IAA3B,GAAkC,KAAKP,IAAL,CAAWO,CAAX,CAAlC,GAAmD,QAAnD,GAA8DS,EAA9D,GAAmE,GAAnE,GAAyE,KAAKhB,IAAL,CAAWgB,EAAX,CAA/E;AACA;;AACD,WAAKK,QAAL,CAAeP,EAAf;AACA,WAAKO,QAAL,CAAeL,EAAf;AACA,aAAO,IAAP;AACA;;;;;AAGF",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "sourcesContent": [
        "import * as UTILS from \"./utils\";\n\nexport class Heap {\n\n\tconstructor( arr, compare, swap, stats ) {\n\t\tthis.heap = arr;\n\t\tthis.size = this.heap.length;\n\t\tthis.swap = swap || UTILS.swap;\n\t\tthis.compare = compare || UTILS.compare;\n\t\tthis.stats = stats || { nWrites:0, nComps:0 };\n\t\tthis.buildHeap();\n\t}\n\n\tgetMax() {\n\t\treturn this.heap[ 0 ];\n\t}\n\n\tparent( i ) {\n\t\treturn ( i - 1 ) >>> 1;\n\t}\n\n\tleftChild( i ) {\n\t\treturn i * 2 + 1;\n\t}\n\n\trightChild( i ) {\n\t\treturn i * 2 + 2;\n\t}\n\n\tinsert( node ) {\n\t\tthis.heap[ this.size ] = node;\n\t\tthis.size++;\n\n\t\tlet cur = this.size - 1;\n\t\twhile ( cur > 0 ) {\n\t\t\tlet par = this.parent( cur );\n\t\t\tif ( this.compare( this.heap[ cur ], this.heap[ par ] ) > 0 ) {\n\t\t\t\t// cur.value is > par.value\n\t\t\t\tthis.swap( this.heap, cur, par );\n\t\t\t\tthis.stats.nWrites += 2;\n\t\t\t}\n\t\t\tthis.stats.nComps += 2;\n\t\t\tcur = par;\n\t\t}\n\t}\n\n\tbuildHeap() {\n\t\tfor ( let i = ( this.size >>> 1 ); i >= 0; i-- ) {\n\t\t\tthis.heapify( i );\n\t\t\t//this.print();\n\t\t}\n\t}\n\n\tstr( i ) {\n\t\treturn \"[\" + i + \"]=\" + ( i < this.size  ? this.heap[ i ] : 'null' );\n\t}\n\n\theapify( nth ) {\n\t\tif ( nth >= 0 && nth < this.size ) {\n\t\t\tlet lc = this.leftChild( nth );\n\t\t\tlet rc = this.rightChild( nth );\n\t\t\tlet maxIdx = ( lc < this.size && this.compare( this.heap[ lc ], this.heap[ nth ] ) > 0 ) ? lc : nth;\n\t\t\tmaxIdx = ( rc < this.size && this.compare( this.heap[ rc ], this.heap[ maxIdx ] ) > 0 ) ? rc : maxIdx;\n\n\t\t\t//console.log( \"heapify \" + this.str( nth ) + \" lc:\" + this.str( lc ) + \" rc:\" + this.str( rc ) + \"  maxIdx=\" + maxIdx );\n\t\t\tif ( maxIdx > nth ) {\n\t\t\t\tthis.swap( this.heap, nth, maxIdx );\n\t\t\t\tthis.stats.nWrites += 2;\n\t\t\t\tthis.heapify( maxIdx );\n\t\t\t}\n\t\t\tthis.stats.nComps += 2;\n\t\t}\n\t}\n\n\tsort(){\n\t\tfor ( let i = this.size; i > 0; i-- ) {\n\t\t\tthis.size--;\n\t\t\tthis.swap( this.heap, this.size, 0 ); //Swap 1st and last element\n\t\t\tthis.heapify( 0 );\n\t\t\t//this.print();\n\t\t}\n\t}\n\n\tprint() {\n\t\tconsole.log( \"Size=\" + this.size + \"  HEAP=\" + this.heap );\n\t}\n\n\tvalidate( i ) {\n\t\tif ( i < 0 || i >= this.size ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet lc = this.leftChild( i );\n\t\tlet rc = this.rightChild( i );\n\n\t\tif ( this.compare( this.heap[ lc ], this.heap[ i ] ) > 0 ) {\n\t\t\tthrow \"Invalid Heat at  [\" + i + \"]=\" + this.heap[ i ] + \" and [\" + lc + \"]\" + this.heap[ lc ];\n\t\t}\n\t\tif ( this.compare( this.heap[ rc ], this.heap[ i ] ) > 0 ) {\n\t\t\tthrow \"Invalid Heat at  [\" + i + \"]=\" + this.heap[ i ] + \" and [\" + rc + \"]\" + this.heap[ rc ];\n\t\t}\n\t\tthis.validate( lc );\n\t\tthis.validate( rc );\n\t\treturn true;\n\t}\n}\n\n/*\nlet arr = UTILS.makeArray();\nvar heap = new Heap( arr );\n\n//arr.forEach( x => heap.insert( x ) );\n\nconsole.log( \"Valid Heap=\" + heap.validate( 0 ) );\nheap.sort();\n*/\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590655721698
  },
  "{\"sourceMaps\":\"both\",\"sourceRoot\":\"/Users/appy/QI/js-samples/algos2/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/appy/QI/js-samples/algos2\",\"filename\":\"/Users/appy/QI/js-samples/algos2/heapSort.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/appy/QI/js-samples/algos2\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.1": {
    "metadata": {},
    "options": {
      "sourceMaps": "both",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/appy/QI/js-samples/algos2",
      "filename": "/Users/appy/QI/js-samples/algos2/heapSort.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/appy/QI/js-samples/algos2",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/appy/QI/js-samples/algos2/heapSort.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/appy/QI/js-samples/algos2/heapSort.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
        "sourceFileName": "heapSort.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar UTILS = _interopRequireWildcard(require(\"./utils\"));\n\nvar _heap = require(\"./heap\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n\"use strict\";\n\nfunction sort(data, start, end, compare, swap) {\n  start = start || 0;\n  end = end || data.length;\n  compare = compare || UTILS.compare;\n  swap = swap || UTILS.swap;\n  var stats = {\n    nComps: 0,\n    nWrites: 0\n  };\n  var h = new _heap.Heap(data, compare, swap, stats);\n\n  for (var i = h.size; i > 0; i--) {\n    h.size--;\n    swap(h.heap, h.size, 0); //Swap 1st and last element\n\n    h.heapify(0); //h.print();\n  }\n\n  return stats;\n}\n\nvar arr = UTILS.makeArray();\nconsole.time(\"HeapSort\");\nvar stats = sort(arr);\nconsole.timeEnd(\"HeapSort\");\nconsole.log(arr.slice(0, 5) + \" ... \" + arr.slice(-5));\nconsole.log(\"Sorted:\" + UTILS.checkSorted(arr));\nconsole.log(stats);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYXBTb3J0LmpzIl0sIm5hbWVzIjpbInNvcnQiLCJkYXRhIiwic3RhcnQiLCJlbmQiLCJjb21wYXJlIiwic3dhcCIsImxlbmd0aCIsIlVUSUxTIiwic3RhdHMiLCJuQ29tcHMiLCJuV3JpdGVzIiwiaCIsIkhlYXAiLCJpIiwic2l6ZSIsImhlYXAiLCJoZWFwaWZ5IiwiYXJyIiwibWFrZUFycmF5IiwiY29uc29sZSIsInRpbWUiLCJ0aW1lRW5kIiwibG9nIiwic2xpY2UiLCJjaGVja1NvcnRlZCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOzs7Ozs7QUFFQTs7QUFFQSxTQUFTQSxJQUFULENBQWVDLElBQWYsRUFBcUJDLEtBQXJCLEVBQTRCQyxHQUE1QixFQUFpQ0MsT0FBakMsRUFBMENDLElBQTFDLEVBQWlEO0FBQ2hESCxFQUFBQSxLQUFLLEdBQUdBLEtBQUssSUFBSSxDQUFqQjtBQUNBQyxFQUFBQSxHQUFHLEdBQUdBLEdBQUcsSUFBSUYsSUFBSSxDQUFDSyxNQUFsQjtBQUNBRixFQUFBQSxPQUFPLEdBQUdBLE9BQU8sSUFBSUcsS0FBSyxDQUFDSCxPQUEzQjtBQUNBQyxFQUFBQSxJQUFJLEdBQUdBLElBQUksSUFBSUUsS0FBSyxDQUFDRixJQUFyQjtBQUVBLE1BQUlHLEtBQUssR0FBRztBQUFFQyxJQUFBQSxNQUFNLEVBQUUsQ0FBVjtBQUFhQyxJQUFBQSxPQUFPLEVBQUU7QUFBdEIsR0FBWjtBQUNBLE1BQUlDLENBQUMsR0FBRyxJQUFJQyxVQUFKLENBQVVYLElBQVYsRUFBZ0JHLE9BQWhCLEVBQXlCQyxJQUF6QixFQUErQkcsS0FBL0IsQ0FBUjs7QUFFQSxPQUFNLElBQUlLLENBQUMsR0FBR0YsQ0FBQyxDQUFDRyxJQUFoQixFQUFzQkQsQ0FBQyxHQUFHLENBQTFCLEVBQTZCQSxDQUFDLEVBQTlCLEVBQW1DO0FBQ2xDRixJQUFBQSxDQUFDLENBQUNHLElBQUY7QUFDQVQsSUFBQUEsSUFBSSxDQUFFTSxDQUFDLENBQUNJLElBQUosRUFBVUosQ0FBQyxDQUFDRyxJQUFaLEVBQWtCLENBQWxCLENBQUosQ0FGa0MsQ0FFUDs7QUFDM0JILElBQUFBLENBQUMsQ0FBQ0ssT0FBRixDQUFXLENBQVgsRUFIa0MsQ0FJbEM7QUFDQTs7QUFFRCxTQUFPUixLQUFQO0FBQ0E7O0FBRUQsSUFBSVMsR0FBRyxHQUFHVixLQUFLLENBQUNXLFNBQU4sRUFBVjtBQUNBQyxPQUFPLENBQUNDLElBQVIsQ0FBYyxVQUFkO0FBQ0EsSUFBTVosS0FBSyxHQUFHUixJQUFJLENBQUVpQixHQUFGLENBQWxCO0FBQ0FFLE9BQU8sQ0FBQ0UsT0FBUixDQUFpQixVQUFqQjtBQUVBRixPQUFPLENBQUNHLEdBQVIsQ0FBYUwsR0FBRyxDQUFDTSxLQUFKLENBQVcsQ0FBWCxFQUFjLENBQWQsSUFBb0IsT0FBcEIsR0FBOEJOLEdBQUcsQ0FBQ00sS0FBSixDQUFXLENBQUMsQ0FBWixDQUEzQztBQUNBSixPQUFPLENBQUNHLEdBQVIsQ0FBYSxZQUFZZixLQUFLLENBQUNpQixXQUFOLENBQW1CUCxHQUFuQixDQUF6QjtBQUNBRSxPQUFPLENBQUNHLEdBQVIsQ0FBYWQsS0FBYiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXBweS9RSS9qcy1zYW1wbGVzL2FsZ29zMi8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBVVElMUyBmcm9tIFwiLi91dGlsc1wiO1xuaW1wb3J0IHtIZWFwfSBmcm9tIFwiLi9oZWFwXCI7XG5cblwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBzb3J0KCBkYXRhLCBzdGFydCwgZW5kLCBjb21wYXJlLCBzd2FwICkge1xuXHRzdGFydCA9IHN0YXJ0IHx8IDA7XG5cdGVuZCA9IGVuZCB8fCBkYXRhLmxlbmd0aDtcblx0Y29tcGFyZSA9IGNvbXBhcmUgfHwgVVRJTFMuY29tcGFyZTtcblx0c3dhcCA9IHN3YXAgfHwgVVRJTFMuc3dhcDtcblxuXHRsZXQgc3RhdHMgPSB7IG5Db21wczogMCwgbldyaXRlczogMCB9O1xuXHRsZXQgaCA9IG5ldyBIZWFwKCBkYXRhLCBjb21wYXJlLCBzd2FwLCBzdGF0cyApO1xuXG5cdGZvciAoIGxldCBpID0gaC5zaXplOyBpID4gMDsgaS0tICkge1xuXHRcdGguc2l6ZS0tO1xuXHRcdHN3YXAoIGguaGVhcCwgaC5zaXplLCAwICk7IC8vU3dhcCAxc3QgYW5kIGxhc3QgZWxlbWVudFxuXHRcdGguaGVhcGlmeSggMCApO1xuXHRcdC8vaC5wcmludCgpO1xuXHR9XG5cdFxuXHRyZXR1cm4gc3RhdHM7XG59XG5cbmxldCBhcnIgPSBVVElMUy5tYWtlQXJyYXkoKTtcbmNvbnNvbGUudGltZSggXCJIZWFwU29ydFwiICk7XG5jb25zdCBzdGF0cyA9IHNvcnQoIGFyciApO1xuY29uc29sZS50aW1lRW5kKCBcIkhlYXBTb3J0XCIgKTtcblxuY29uc29sZS5sb2coIGFyci5zbGljZSggMCwgNSApICsgXCIgLi4uIFwiICsgYXJyLnNsaWNlKCAtNSApICk7XG5jb25zb2xlLmxvZyggXCJTb3J0ZWQ6XCIgKyBVVElMUy5jaGVja1NvcnRlZCggYXJyICkgKTtcbmNvbnNvbGUubG9nKCBzdGF0cyApO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "heapSort.js"
      ],
      "names": [
        "sort",
        "data",
        "start",
        "end",
        "compare",
        "swap",
        "length",
        "UTILS",
        "stats",
        "nComps",
        "nWrites",
        "h",
        "Heap",
        "i",
        "size",
        "heap",
        "heapify",
        "arr",
        "makeArray",
        "console",
        "time",
        "timeEnd",
        "log",
        "slice",
        "checkSorted"
      ],
      "mappings": ";;;;AAAA;;AACA;;;;;;AAEA;;AAEA,SAASA,IAAT,CAAeC,IAAf,EAAqBC,KAArB,EAA4BC,GAA5B,EAAiCC,OAAjC,EAA0CC,IAA1C,EAAiD;AAChDH,EAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;AACAC,EAAAA,GAAG,GAAGA,GAAG,IAAIF,IAAI,CAACK,MAAlB;AACAF,EAAAA,OAAO,GAAGA,OAAO,IAAIG,KAAK,CAACH,OAA3B;AACAC,EAAAA,IAAI,GAAGA,IAAI,IAAIE,KAAK,CAACF,IAArB;AAEA,MAAIG,KAAK,GAAG;AAAEC,IAAAA,MAAM,EAAE,CAAV;AAAaC,IAAAA,OAAO,EAAE;AAAtB,GAAZ;AACA,MAAIC,CAAC,GAAG,IAAIC,UAAJ,CAAUX,IAAV,EAAgBG,OAAhB,EAAyBC,IAAzB,EAA+BG,KAA/B,CAAR;;AAEA,OAAM,IAAIK,CAAC,GAAGF,CAAC,CAACG,IAAhB,EAAsBD,CAAC,GAAG,CAA1B,EAA6BA,CAAC,EAA9B,EAAmC;AAClCF,IAAAA,CAAC,CAACG,IAAF;AACAT,IAAAA,IAAI,CAAEM,CAAC,CAACI,IAAJ,EAAUJ,CAAC,CAACG,IAAZ,EAAkB,CAAlB,CAAJ,CAFkC,CAEP;;AAC3BH,IAAAA,CAAC,CAACK,OAAF,CAAW,CAAX,EAHkC,CAIlC;AACA;;AAED,SAAOR,KAAP;AACA;;AAED,IAAIS,GAAG,GAAGV,KAAK,CAACW,SAAN,EAAV;AACAC,OAAO,CAACC,IAAR,CAAc,UAAd;AACA,IAAMZ,KAAK,GAAGR,IAAI,CAAEiB,GAAF,CAAlB;AACAE,OAAO,CAACE,OAAR,CAAiB,UAAjB;AAEAF,OAAO,CAACG,GAAR,CAAaL,GAAG,CAACM,KAAJ,CAAW,CAAX,EAAc,CAAd,IAAoB,OAApB,GAA8BN,GAAG,CAACM,KAAJ,CAAW,CAAC,CAAZ,CAA3C;AACAJ,OAAO,CAACG,GAAR,CAAa,YAAYf,KAAK,CAACiB,WAAN,CAAmBP,GAAnB,CAAzB;AACAE,OAAO,CAACG,GAAR,CAAad,KAAb",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "sourcesContent": [
        "import * as UTILS from \"./utils\";\nimport {Heap} from \"./heap\";\n\n\"use strict\";\n\nfunction sort( data, start, end, compare, swap ) {\n\tstart = start || 0;\n\tend = end || data.length;\n\tcompare = compare || UTILS.compare;\n\tswap = swap || UTILS.swap;\n\n\tlet stats = { nComps: 0, nWrites: 0 };\n\tlet h = new Heap( data, compare, swap, stats );\n\n\tfor ( let i = h.size; i > 0; i-- ) {\n\t\th.size--;\n\t\tswap( h.heap, h.size, 0 ); //Swap 1st and last element\n\t\th.heapify( 0 );\n\t\t//h.print();\n\t}\n\t\n\treturn stats;\n}\n\nlet arr = UTILS.makeArray();\nconsole.time( \"HeapSort\" );\nconst stats = sort( arr );\nconsole.timeEnd( \"HeapSort\" );\n\nconsole.log( arr.slice( 0, 5 ) + \" ... \" + arr.slice( -5 ) );\nconsole.log( \"Sorted:\" + UTILS.checkSorted( arr ) );\nconsole.log( stats );\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590655857856
  },
  "{\"sourceMaps\":\"both\",\"sourceRoot\":\"/Users/appy/QI/js-samples/algos2/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/appy/QI/js-samples/algos2\",\"filename\":\"/Users/appy/QI/js-samples/algos2/insertionSort.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/appy/QI/js-samples/algos2\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.1": {
    "metadata": {},
    "options": {
      "sourceMaps": "both",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/appy/QI/js-samples/algos2",
      "filename": "/Users/appy/QI/js-samples/algos2/insertionSort.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/appy/QI/js-samples/algos2",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/appy/QI/js-samples/algos2/insertionSort.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/appy/QI/js-samples/algos2/insertionSort.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
        "sourceFileName": "insertionSort.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar UTILS = _interopRequireWildcard(require(\"./utils\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction rotateRight(ar, start, end) {\n  var tmp = ar[end];\n\n  for (var i = end; i > start; i--) {\n    ar[i] = ar[i - 1];\n  }\n\n  ar[start] = tmp;\n}\n\nfunction sort(data, start, end, compare) {\n  start = start || 0;\n  end = end || data.length;\n  compare = compare || UTILS.compare;\n  var stats = {\n    nComps: 0,\n    nMoves: 0\n  };\n\n  for (var i = start + 1; i < end; i++) {\n    for (var j = start; j < i; j++) {\n      stats.nComps++;\n\n      if (compare(data[i], data[j]) < 0) {\n        rotateRight(data, j, i);\n        stats.nMoves += i - j;\n        break;\n      }\n    }\n  }\n\n  return stats;\n}\n\nvar arr = UTILS.makeArray();\nconsole.time(\"InsertionSort\");\nvar stats = sort(arr);\nconsole.timeEnd(\"InsertionSort\");\nconsole.log(arr.slice(0, 5) + \" ... \" + arr.slice(-5));\nconsole.log(\"Sorted:\" + UTILS.checkSorted(arr));\nconsole.log(\"Stats:\", stats);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluc2VydGlvblNvcnQuanMiXSwibmFtZXMiOlsicm90YXRlUmlnaHQiLCJhciIsInN0YXJ0IiwiZW5kIiwidG1wIiwiaSIsInNvcnQiLCJkYXRhIiwiY29tcGFyZSIsImxlbmd0aCIsIlVUSUxTIiwic3RhdHMiLCJuQ29tcHMiLCJuTW92ZXMiLCJqIiwiYXJyIiwibWFrZUFycmF5IiwiY29uc29sZSIsInRpbWUiLCJ0aW1lRW5kIiwibG9nIiwic2xpY2UiLCJjaGVja1NvcnRlZCJdLCJtYXBwaW5ncyI6IkFBQ0E7Ozs7QUFFQTs7Ozs7O0FBRUEsU0FBU0EsV0FBVCxDQUFzQkMsRUFBdEIsRUFBMEJDLEtBQTFCLEVBQWlDQyxHQUFqQyxFQUF1QztBQUN0QyxNQUFJQyxHQUFHLEdBQUdILEVBQUUsQ0FBRUUsR0FBRixDQUFaOztBQUNBLE9BQU0sSUFBSUUsQ0FBQyxHQUFHRixHQUFkLEVBQW1CRSxDQUFDLEdBQUdILEtBQXZCLEVBQThCRyxDQUFDLEVBQS9CLEVBQW9DO0FBQ25DSixJQUFBQSxFQUFFLENBQUVJLENBQUYsQ0FBRixHQUFVSixFQUFFLENBQUVJLENBQUMsR0FBRyxDQUFOLENBQVo7QUFDQTs7QUFDREosRUFBQUEsRUFBRSxDQUFFQyxLQUFGLENBQUYsR0FBY0UsR0FBZDtBQUNBOztBQUVELFNBQVNFLElBQVQsQ0FBZUMsSUFBZixFQUFxQkwsS0FBckIsRUFBNEJDLEdBQTVCLEVBQWlDSyxPQUFqQyxFQUEyQztBQUMxQ04sRUFBQUEsS0FBSyxHQUFHQSxLQUFLLElBQUksQ0FBakI7QUFDQUMsRUFBQUEsR0FBRyxHQUFHQSxHQUFHLElBQUlJLElBQUksQ0FBQ0UsTUFBbEI7QUFDQUQsRUFBQUEsT0FBTyxHQUFHQSxPQUFPLElBQUlFLEtBQUssQ0FBQ0YsT0FBM0I7QUFFQSxNQUFJRyxLQUFLLEdBQUc7QUFBRUMsSUFBQUEsTUFBTSxFQUFFLENBQVY7QUFBYUMsSUFBQUEsTUFBTSxFQUFFO0FBQXJCLEdBQVo7O0FBQ0EsT0FBTSxJQUFJUixDQUFDLEdBQUdILEtBQUssR0FBRyxDQUF0QixFQUF5QkcsQ0FBQyxHQUFHRixHQUE3QixFQUFrQ0UsQ0FBQyxFQUFuQyxFQUF3QztBQUN2QyxTQUFNLElBQUlTLENBQUMsR0FBR1osS0FBZCxFQUFxQlksQ0FBQyxHQUFHVCxDQUF6QixFQUE0QlMsQ0FBQyxFQUE3QixFQUFrQztBQUNqQ0gsTUFBQUEsS0FBSyxDQUFDQyxNQUFOOztBQUNBLFVBQUtKLE9BQU8sQ0FBRUQsSUFBSSxDQUFFRixDQUFGLENBQU4sRUFBYUUsSUFBSSxDQUFFTyxDQUFGLENBQWpCLENBQVAsR0FBa0MsQ0FBdkMsRUFBMkM7QUFDMUNkLFFBQUFBLFdBQVcsQ0FBRU8sSUFBRixFQUFRTyxDQUFSLEVBQVdULENBQVgsQ0FBWDtBQUNBTSxRQUFBQSxLQUFLLENBQUNFLE1BQU4sSUFBZ0JSLENBQUMsR0FBR1MsQ0FBcEI7QUFDQTtBQUNBO0FBQ0Q7QUFDRDs7QUFDRCxTQUFPSCxLQUFQO0FBQ0E7O0FBRUQsSUFBSUksR0FBRyxHQUFHTCxLQUFLLENBQUNNLFNBQU4sRUFBVjtBQUNBQyxPQUFPLENBQUNDLElBQVIsQ0FBYyxlQUFkO0FBQ0EsSUFBTVAsS0FBSyxHQUFHTCxJQUFJLENBQUVTLEdBQUYsQ0FBbEI7QUFDQUUsT0FBTyxDQUFDRSxPQUFSLENBQWlCLGVBQWpCO0FBRUFGLE9BQU8sQ0FBQ0csR0FBUixDQUFhTCxHQUFHLENBQUNNLEtBQUosQ0FBVyxDQUFYLEVBQWMsQ0FBZCxJQUFvQixPQUFwQixHQUE4Qk4sR0FBRyxDQUFDTSxLQUFKLENBQVcsQ0FBQyxDQUFaLENBQTNDO0FBQ0FKLE9BQU8sQ0FBQ0csR0FBUixDQUFhLFlBQVlWLEtBQUssQ0FBQ1ksV0FBTixDQUFtQlAsR0FBbkIsQ0FBekI7QUFDQUUsT0FBTyxDQUFDRyxHQUFSLENBQWEsUUFBYixFQUF1QlQsS0FBdkIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2FwcHkvUUkvanMtc2FtcGxlcy9hbGdvczIvIiwic291cmNlc0NvbnRlbnQiOlsiXG5cInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0ICogYXMgVVRJTFMgZnJvbSBcIi4vdXRpbHNcIjtcblxuZnVuY3Rpb24gcm90YXRlUmlnaHQoIGFyLCBzdGFydCwgZW5kICkge1xuXHRsZXQgdG1wID0gYXJbIGVuZCBdO1xuXHRmb3IgKCBsZXQgaSA9IGVuZDsgaSA+IHN0YXJ0OyBpLS0gKSB7XG5cdFx0YXJbIGkgXSA9IGFyWyBpIC0gMSBdO1xuXHR9XG5cdGFyWyBzdGFydCBdID0gdG1wO1xufVxuXG5mdW5jdGlvbiBzb3J0KCBkYXRhLCBzdGFydCwgZW5kLCBjb21wYXJlICkge1xuXHRzdGFydCA9IHN0YXJ0IHx8IDA7XG5cdGVuZCA9IGVuZCB8fCBkYXRhLmxlbmd0aDtcblx0Y29tcGFyZSA9IGNvbXBhcmUgfHwgVVRJTFMuY29tcGFyZTtcblxuXHRsZXQgc3RhdHMgPSB7IG5Db21wczogMCwgbk1vdmVzOiAwIH07XG5cdGZvciAoIGxldCBpID0gc3RhcnQgKyAxOyBpIDwgZW5kOyBpKysgKSB7XG5cdFx0Zm9yICggbGV0IGogPSBzdGFydDsgaiA8IGk7IGorKyApIHtcblx0XHRcdHN0YXRzLm5Db21wcysrO1xuXHRcdFx0aWYgKCBjb21wYXJlKCBkYXRhWyBpIF0sIGRhdGFbIGogXSApIDwgMCApIHtcblx0XHRcdFx0cm90YXRlUmlnaHQoIGRhdGEsIGosIGkgKTtcblx0XHRcdFx0c3RhdHMubk1vdmVzICs9IGkgLSBqO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0cmV0dXJuIHN0YXRzO1xufVxuXG5sZXQgYXJyID0gVVRJTFMubWFrZUFycmF5KCk7XG5jb25zb2xlLnRpbWUoIFwiSW5zZXJ0aW9uU29ydFwiICk7XG5jb25zdCBzdGF0cyA9IHNvcnQoIGFyciApO1xuY29uc29sZS50aW1lRW5kKCBcIkluc2VydGlvblNvcnRcIiApO1xuXG5jb25zb2xlLmxvZyggYXJyLnNsaWNlKCAwLCA1ICkgKyBcIiAuLi4gXCIgKyBhcnIuc2xpY2UoIC01ICkgKTtcbmNvbnNvbGUubG9nKCBcIlNvcnRlZDpcIiArIFVUSUxTLmNoZWNrU29ydGVkKCBhcnIgKSApO1xuY29uc29sZS5sb2coIFwiU3RhdHM6XCIsIHN0YXRzICk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "insertionSort.js"
      ],
      "names": [
        "rotateRight",
        "ar",
        "start",
        "end",
        "tmp",
        "i",
        "sort",
        "data",
        "compare",
        "length",
        "UTILS",
        "stats",
        "nComps",
        "nMoves",
        "j",
        "arr",
        "makeArray",
        "console",
        "time",
        "timeEnd",
        "log",
        "slice",
        "checkSorted"
      ],
      "mappings": "AACA;;;;AAEA;;;;;;AAEA,SAASA,WAAT,CAAsBC,EAAtB,EAA0BC,KAA1B,EAAiCC,GAAjC,EAAuC;AACtC,MAAIC,GAAG,GAAGH,EAAE,CAAEE,GAAF,CAAZ;;AACA,OAAM,IAAIE,CAAC,GAAGF,GAAd,EAAmBE,CAAC,GAAGH,KAAvB,EAA8BG,CAAC,EAA/B,EAAoC;AACnCJ,IAAAA,EAAE,CAAEI,CAAF,CAAF,GAAUJ,EAAE,CAAEI,CAAC,GAAG,CAAN,CAAZ;AACA;;AACDJ,EAAAA,EAAE,CAAEC,KAAF,CAAF,GAAcE,GAAd;AACA;;AAED,SAASE,IAAT,CAAeC,IAAf,EAAqBL,KAArB,EAA4BC,GAA5B,EAAiCK,OAAjC,EAA2C;AAC1CN,EAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;AACAC,EAAAA,GAAG,GAAGA,GAAG,IAAII,IAAI,CAACE,MAAlB;AACAD,EAAAA,OAAO,GAAGA,OAAO,IAAIE,KAAK,CAACF,OAA3B;AAEA,MAAIG,KAAK,GAAG;AAAEC,IAAAA,MAAM,EAAE,CAAV;AAAaC,IAAAA,MAAM,EAAE;AAArB,GAAZ;;AACA,OAAM,IAAIR,CAAC,GAAGH,KAAK,GAAG,CAAtB,EAAyBG,CAAC,GAAGF,GAA7B,EAAkCE,CAAC,EAAnC,EAAwC;AACvC,SAAM,IAAIS,CAAC,GAAGZ,KAAd,EAAqBY,CAAC,GAAGT,CAAzB,EAA4BS,CAAC,EAA7B,EAAkC;AACjCH,MAAAA,KAAK,CAACC,MAAN;;AACA,UAAKJ,OAAO,CAAED,IAAI,CAAEF,CAAF,CAAN,EAAaE,IAAI,CAAEO,CAAF,CAAjB,CAAP,GAAkC,CAAvC,EAA2C;AAC1Cd,QAAAA,WAAW,CAAEO,IAAF,EAAQO,CAAR,EAAWT,CAAX,CAAX;AACAM,QAAAA,KAAK,CAACE,MAAN,IAAgBR,CAAC,GAAGS,CAApB;AACA;AACA;AACD;AACD;;AACD,SAAOH,KAAP;AACA;;AAED,IAAII,GAAG,GAAGL,KAAK,CAACM,SAAN,EAAV;AACAC,OAAO,CAACC,IAAR,CAAc,eAAd;AACA,IAAMP,KAAK,GAAGL,IAAI,CAAES,GAAF,CAAlB;AACAE,OAAO,CAACE,OAAR,CAAiB,eAAjB;AAEAF,OAAO,CAACG,GAAR,CAAaL,GAAG,CAACM,KAAJ,CAAW,CAAX,EAAc,CAAd,IAAoB,OAApB,GAA8BN,GAAG,CAACM,KAAJ,CAAW,CAAC,CAAZ,CAA3C;AACAJ,OAAO,CAACG,GAAR,CAAa,YAAYV,KAAK,CAACY,WAAN,CAAmBP,GAAnB,CAAzB;AACAE,OAAO,CAACG,GAAR,CAAa,QAAb,EAAuBT,KAAvB",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "sourcesContent": [
        "\n\"use strict\";\n\nimport * as UTILS from \"./utils\";\n\nfunction rotateRight( ar, start, end ) {\n\tlet tmp = ar[ end ];\n\tfor ( let i = end; i > start; i-- ) {\n\t\tar[ i ] = ar[ i - 1 ];\n\t}\n\tar[ start ] = tmp;\n}\n\nfunction sort( data, start, end, compare ) {\n\tstart = start || 0;\n\tend = end || data.length;\n\tcompare = compare || UTILS.compare;\n\n\tlet stats = { nComps: 0, nMoves: 0 };\n\tfor ( let i = start + 1; i < end; i++ ) {\n\t\tfor ( let j = start; j < i; j++ ) {\n\t\t\tstats.nComps++;\n\t\t\tif ( compare( data[ i ], data[ j ] ) < 0 ) {\n\t\t\t\trotateRight( data, j, i );\n\t\t\t\tstats.nMoves += i - j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn stats;\n}\n\nlet arr = UTILS.makeArray();\nconsole.time( \"InsertionSort\" );\nconst stats = sort( arr );\nconsole.timeEnd( \"InsertionSort\" );\n\nconsole.log( arr.slice( 0, 5 ) + \" ... \" + arr.slice( -5 ) );\nconsole.log( \"Sorted:\" + UTILS.checkSorted( arr ) );\nconsole.log( \"Stats:\", stats );\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590725174008
  },
  "{\"sourceMaps\":\"both\",\"sourceRoot\":\"/Users/appy/QI/js-samples/algos2/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/appy/QI/js-samples/algos2\",\"filename\":\"/Users/appy/QI/js-samples/algos2/crossword.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/appy/QI/js-samples/algos2\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.1": {
    "metadata": {},
    "options": {
      "sourceMaps": "both",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/appy/QI/js-samples/algos2",
      "filename": "/Users/appy/QI/js-samples/algos2/crossword.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/appy/QI/js-samples/algos2",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/appy/QI/js-samples/algos2/crossword.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/appy/QI/js-samples/algos2/crossword.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
        "sourceFileName": "crossword.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction makeXwd(n, m, init) {\n  var xwd = new Array(n);\n\n  for (var i = 0; i < n; i++) {\n    xwd[i] = new Array(m);\n\n    if (init) {\n      for (var j = 0; j < m; j++) {\n        xwd[i][j] = init[Math.floor(Math.random() * init.length)];\n      }\n    }\n  }\n\n  console.log(xwd);\n  return xwd;\n}\n\nfunction hideString(xwd, search) {\n  var totRows = xwd.length;\n  var totCols = xwd[0].length;\n  var maxRowOff = totRows - search.length; //To accommodate search string\n\n  var maxColOff = totCols - search.length; //To accommodate search string\n\n  var dir = Math.floor(Math.random() * 3);\n\n  switch (dir) {\n    case 0:\n      {\n        //Horizontal Left\n        var row = Math.floor(Math.random() * totRows);\n        var col = Math.floor(Math.random() * maxColOff);\n\n        for (var i = 0; i < search.length; i++) {\n          xwd[row][col + i] = search[i];\n        }\n      }\n      break;\n\n    case 1:\n      {\n        //Vertical Down\n        var _row = Math.floor(Math.random() * maxRowOff);\n\n        var _col = Math.floor(Math.random() * totCols);\n\n        for (var _i = 0; _i < search.length; _i++) {\n          xwd[_row + _i][_col] = search[_i];\n        }\n      }\n      break;\n\n    case 2:\n      {\n        // Diagonal Left Down\n        var _row2 = Math.floor(Math.random() * maxRowOff);\n\n        var _col2 = Math.floor(Math.random() * maxColOff);\n\n        for (var _i2 = 0; _i2 < search.length; _i2++) {\n          xwd[_row2 + _i2][_col2 + _i2] = search[_i2];\n        }\n      }\n      break;\n\n    default:\n      throw \"Invalid Direction\";\n  }\n}\n\nvar VISITS = undefined;\n\nfunction xwdSearch(xwd, search, i, j, options) {\n  var totRows = xwd.length;\n  var totCols = xwd[0].length;\n\n  if (i >= totRows || j >= totCols || i < 0 || j < 0) {\n    return;\n  }\n\n  options = options || {};\n  options.visits = options.visits || makeXwd(totRows, totCols, [0]);\n  options.expectations = options.expectations || [];\n  options.visits[i][j]++;\n  var expect = options.expectations;\n  var ch = xwd[i][j];\n  console.log(\"VISITING [\" + i + \",\" + j + \"]=\" + ch);\n\n  for (var k = 0; k < expect.length; k++) {\n    var e = expect[k];\n\n    if (e.r === i && e.c === j) {\n      if (ch === search[e.s]) {\n        console.log(\"matched expectation at search index \" + e.s);\n\n        if (e.s === search.length - 1) {\n          return true;\n        }\n\n        switch (e.d) {\n          case 1:\n            e.c++;\n            e.s++;\n            break;\n\n          case 2:\n            e.r++;\n            e.s++;\n            break;\n\n          case 3:\n            e.r++;\n            e.c++;\n            e.s++;\n            break;\n        }\n      }\n    }\n  }\n\n  {\n    // ASSUME all expectations will fail\n    var f = -1;\n\n    while ((f = search.indexOf(ch, f + 1)) >= 0) {\n      if (f < search.length - 1) {\n        if (totCols - j >= search.length - f) {\n          expect.push({\n            r: i,\n            c: j + 1,\n            s: f + 1,\n            d: 1\n          });\n        }\n\n        if (totRows - i >= search.length - f) {\n          expect.push({\n            r: i + 1,\n            c: j,\n            s: f + 1,\n            d: 2\n          });\n        }\n\n        if (totCols - j >= search.length - f && totRows - i >= search.length - f) {\n          expect.push({\n            r: i + 1,\n            c: j + 1,\n            s: f + 1,\n            d: 3\n          });\n        }\n      }\n      /*\tSEARCH LEFT\n      \t\tif ( f > 0 && i > 0 ) {\n      \t\t\t\tif ( j >= f ) {\n      \t\t\t\t\texpect.push( { r: i, c: j - 1, s: f - 1 } );\n      \t\t\t\t}\n      \t\t\t\tif ( i >= f ) {\n      \t\t\t\t\texpect.push( { r: i - 1, c: j, s: f - 1 } );\n      \t\t\t\t}\n      \t\t\t\tif ( j > f && j > f ) {\n      \t\t\t\t\texpect.push( { r: i - 1, c: j - 1, s: f - 1 } );\n      \t\t\t\t}\n      \t\t\t}\n      */\n\n    }\n  }\n  var found = false;\n  found = found || xwdSearch(xwd, search, i, j + 1, options); //Visit node on right\n\n  found = found || xwdSearch(xwd, search, i + 1, j, options); //Visit node below\n\n  found = found || xwdSearch(xwd, search, i + 1, j + 1, options); //Visit node diagnally\n\n  return found;\n}\n\nvar alpha = \"qwertyuiopasdfghjklzxcvbnm\";\nvar xwd = makeXwd(3, 3, alpha.split(\"\"));\nvar search = \"GO\".split(\"\");\nconsole.log(\"Search String=\" + search);\nhideString(xwd, search);\nconsole.log(xwd);\nvar options = {};\nvar found = xwdSearch(xwd, search, 0, 0, options);\nconsole.log(\"FOUND=\" + found);\nconsole.log(options);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "crossword.js"
      ],
      "names": [
        "makeXwd",
        "n",
        "m",
        "init",
        "xwd",
        "Array",
        "i",
        "j",
        "Math",
        "floor",
        "random",
        "length",
        "console",
        "log",
        "hideString",
        "search",
        "totRows",
        "totCols",
        "maxRowOff",
        "maxColOff",
        "dir",
        "row",
        "col",
        "VISITS",
        "undefined",
        "xwdSearch",
        "options",
        "visits",
        "expectations",
        "expect",
        "ch",
        "k",
        "e",
        "r",
        "c",
        "s",
        "d",
        "f",
        "indexOf",
        "push",
        "found",
        "alpha",
        "split"
      ],
      "mappings": ";;AAAA,SAASA,OAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwBC,IAAxB,EAA+B;AAC9B,MAAIC,GAAG,GAAG,IAAIC,KAAJ,CAAWJ,CAAX,CAAV;;AACA,OAAM,IAAIK,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGL,CAArB,EAAwBK,CAAC,EAAzB,EAA8B;AAC7BF,IAAAA,GAAG,CAAEE,CAAF,CAAH,GAAW,IAAID,KAAJ,CAAWH,CAAX,CAAX;;AACA,QAAKC,IAAL,EAAY;AACX,WAAM,IAAII,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGL,CAArB,EAAwBK,CAAC,EAAzB,EAA8B;AAC7BH,QAAAA,GAAG,CAAEE,CAAF,CAAH,CAAUC,CAAV,IAAgBJ,IAAI,CAAIK,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBP,IAAI,CAACQ,MAAjC,CAAJ,CAApB;AACA;AACD;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAaT,GAAb;AACA,SAAOA,GAAP;AACA;;AAED,SAASU,UAAT,CAAqBV,GAArB,EAA0BW,MAA1B,EAAmC;AAClC,MAAMC,OAAO,GAAGZ,GAAG,CAACO,MAApB;AACA,MAAMM,OAAO,GAAGb,GAAG,CAAE,CAAF,CAAH,CAASO,MAAzB;AAEA,MAAMO,SAAS,GAAGF,OAAO,GAAGD,MAAM,CAACJ,MAAnC,CAJkC,CAIS;;AAC3C,MAAMQ,SAAS,GAAGF,OAAO,GAAGF,MAAM,CAACJ,MAAnC,CALkC,CAKS;;AAE3C,MAAMS,GAAG,GAAGZ,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,CAA5B,CAAZ;;AACA,UAASU,GAAT;AACC,SAAK,CAAL;AAAQ;AAAE;AACT,YAAMC,GAAG,GAAGb,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBM,OAA5B,CAAZ;AACA,YAAMM,GAAG,GAAGd,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBS,SAA5B,CAAZ;;AACA,aAAM,IAAIb,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGS,MAAM,CAACJ,MAA5B,EAAoCL,CAAC,EAArC,EAA0C;AACzCF,UAAAA,GAAG,CAAEiB,GAAF,CAAH,CAAYC,GAAG,GAAGhB,CAAlB,IAAwBS,MAAM,CAAET,CAAF,CAA9B;AACA;AACD;AACA;;AACD,SAAK,CAAL;AAAS;AAAE;AACV,YAAMe,IAAG,GAAGb,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBQ,SAA5B,CAAZ;;AACA,YAAMI,IAAG,GAAGd,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBO,OAA5B,CAAZ;;AACA,aAAM,IAAIX,EAAC,GAAG,CAAd,EAAiBA,EAAC,GAAGS,MAAM,CAACJ,MAA5B,EAAoCL,EAAC,EAArC,EAA0C;AAAEF,UAAAA,GAAG,CAAEiB,IAAG,GAAGf,EAAR,CAAH,CAAgBgB,IAAhB,IAAwBP,MAAM,CAAET,EAAF,CAA9B;AAAsC;AAClF;AACA;;AACD,SAAK,CAAL;AAAQ;AAAE;AACT,YAAMe,KAAG,GAAGb,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBQ,SAA5B,CAAZ;;AACA,YAAMI,KAAG,GAAGd,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBS,SAA5B,CAAZ;;AACA,aAAM,IAAIb,GAAC,GAAG,CAAd,EAAiBA,GAAC,GAAGS,MAAM,CAACJ,MAA5B,EAAoCL,GAAC,EAArC,EAA0C;AACzCF,UAAAA,GAAG,CAAEiB,KAAG,GAAGf,GAAR,CAAH,CAAgBgB,KAAG,GAAGhB,GAAtB,IAA4BS,MAAM,CAAET,GAAF,CAAlC;AACA;AACD;AACA;;AAED;AACC,YAAM,mBAAN;AAzBF;AA2BA;;AAED,IAAIiB,MAAM,GAAGC,SAAb;;AAGA,SAASC,SAAT,CAAoBrB,GAApB,EAAyBW,MAAzB,EAAiCT,CAAjC,EAAoCC,CAApC,EAAuCmB,OAAvC,EAAiD;AAChD,MAAMV,OAAO,GAAGZ,GAAG,CAACO,MAApB;AACA,MAAMM,OAAO,GAAGb,GAAG,CAAE,CAAF,CAAH,CAASO,MAAzB;;AAEA,MAAKL,CAAC,IAAIU,OAAL,IAAgBT,CAAC,IAAIU,OAArB,IAAgCX,CAAC,GAAG,CAApC,IAAyCC,CAAC,GAAG,CAAlD,EAAsD;AAAE;AAAS;;AAEjEmB,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAA,EAAAA,OAAO,CAACC,MAAR,GAAiBD,OAAO,CAACC,MAAR,IAAkB3B,OAAO,CAAEgB,OAAF,EAAWC,OAAX,EAAoB,CAAC,CAAD,CAApB,CAA1C;AACAS,EAAAA,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACE,YAAR,IAAwB,EAA/C;AAEAF,EAAAA,OAAO,CAACC,MAAR,CAAgBrB,CAAhB,EAAqBC,CAArB;AACA,MAAIsB,MAAM,GAAGH,OAAO,CAACE,YAArB;AAEA,MAAME,EAAE,GAAG1B,GAAG,CAAEE,CAAF,CAAH,CAAUC,CAAV,CAAX;AAEDK,EAAAA,OAAO,CAACC,GAAR,CAAa,eAAeP,CAAf,GAAmB,GAAnB,GAAyBC,CAAzB,GAA6B,IAA7B,GAAoCuB,EAAjD;;AACC,OAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGF,MAAM,CAAClB,MAA5B,EAAoCoB,CAAC,EAArC,EAA0C;AACzC,QAAIC,CAAC,GAAGH,MAAM,CAAEE,CAAF,CAAd;;AACA,QAAKC,CAAC,CAACC,CAAF,KAAQ3B,CAAR,IAAa0B,CAAC,CAACE,CAAF,KAAQ3B,CAA1B,EAA8B;AAC7B,UAAKuB,EAAE,KAAKf,MAAM,CAAEiB,CAAC,CAACG,CAAJ,CAAlB,EAA4B;AAC3BvB,QAAAA,OAAO,CAACC,GAAR,CAAa,yCAAyCmB,CAAC,CAACG,CAAxD;;AACA,YAAKH,CAAC,CAACG,CAAF,KAAQpB,MAAM,CAACJ,MAAP,GAAgB,CAA7B,EAAgC;AAC/B,iBAAO,IAAP;AACA;;AACD,gBAASqB,CAAC,CAACI,CAAX;AACC,eAAK,CAAL;AAAQJ,YAAAA,CAAC,CAACE,CAAF;AAAOF,YAAAA,CAAC,CAACG,CAAF;AAAO;;AACtB,eAAK,CAAL;AAAQH,YAAAA,CAAC,CAACC,CAAF;AAAOD,YAAAA,CAAC,CAACG,CAAF;AAAO;;AACtB,eAAK,CAAL;AAAQH,YAAAA,CAAC,CAACC,CAAF;AAAOD,YAAAA,CAAC,CAACE,CAAF;AAAOF,YAAAA,CAAC,CAACG,CAAF;AAAO;AAH9B;AAKA;AACD;AACD;;AACD;AAEC;AACA,QAAIE,CAAC,GAAG,CAAC,CAAT;;AACA,WAAQ,CAACA,CAAC,GAAGtB,MAAM,CAACuB,OAAP,CAAgBR,EAAhB,EAAoBO,CAAC,GAAG,CAAxB,CAAL,KAAqC,CAA7C,EAAiD;AAChD,UAAKA,CAAC,GAAGtB,MAAM,CAACJ,MAAP,GAAgB,CAAzB,EAA6B;AAC5B,YAAKM,OAAO,GAAGV,CAAV,IAAeQ,MAAM,CAACJ,MAAP,GAAgB0B,CAApC,EAAwC;AACvCR,UAAAA,MAAM,CAACU,IAAP,CAAa;AAAEN,YAAAA,CAAC,EAAE3B,CAAL;AAAQ4B,YAAAA,CAAC,EAAE3B,CAAC,GAAG,CAAf;AAAkB4B,YAAAA,CAAC,EAAEE,CAAC,GAAG,CAAzB;AAA4BD,YAAAA,CAAC,EAAE;AAA/B,WAAb;AACA;;AACD,YAAKpB,OAAO,GAAGV,CAAV,IAAeS,MAAM,CAACJ,MAAP,GAAgB0B,CAApC,EAAwC;AACvCR,UAAAA,MAAM,CAACU,IAAP,CAAa;AAAEN,YAAAA,CAAC,EAAE3B,CAAC,GAAG,CAAT;AAAY4B,YAAAA,CAAC,EAAE3B,CAAf;AAAkB4B,YAAAA,CAAC,EAAEE,CAAC,GAAG,CAAzB;AAA4BD,YAAAA,CAAC,EAAE;AAA/B,WAAb;AACA;;AACD,YAAKnB,OAAO,GAAGV,CAAV,IAAeQ,MAAM,CAACJ,MAAP,GAAgB0B,CAA/B,IAAoCrB,OAAO,GAAGV,CAAV,IAAeS,MAAM,CAACJ,MAAP,GAAgB0B,CAAxE,EAA4E;AAC3ER,UAAAA,MAAM,CAACU,IAAP,CAAa;AAAEN,YAAAA,CAAC,EAAE3B,CAAC,GAAG,CAAT;AAAY4B,YAAAA,CAAC,EAAE3B,CAAC,GAAG,CAAnB;AAAsB4B,YAAAA,CAAC,EAAEE,CAAC,GAAG,CAA7B;AAAgCD,YAAAA,CAAC,EAAE;AAAnC,WAAb;AACA;AACD;AACJ;;;;;;;;;;;;;;AAaG;AACD;AACD,MAAII,KAAK,GAAG,KAAZ;AACAA,EAAAA,KAAK,GAAGA,KAAK,IAAIf,SAAS,CAAErB,GAAF,EAAOW,MAAP,EAAeT,CAAf,EAAkBC,CAAC,GAAG,CAAtB,EAAyBmB,OAAzB,CAA1B,CAhEgD,CAgEc;;AAC9Dc,EAAAA,KAAK,GAAGA,KAAK,IAAIf,SAAS,CAAErB,GAAF,EAAOW,MAAP,EAAeT,CAAC,GAAG,CAAnB,EAAsBC,CAAtB,EAAyBmB,OAAzB,CAA1B,CAjEgD,CAiEc;;AAC9Dc,EAAAA,KAAK,GAAGA,KAAK,IAAIf,SAAS,CAAErB,GAAF,EAAOW,MAAP,EAAeT,CAAC,GAAG,CAAnB,EAAsBC,CAAC,GAAG,CAA1B,EAA6BmB,OAA7B,CAA1B,CAlEgD,CAkEkB;;AAElE,SAAOc,KAAP;AACA;;AAID,IAAMC,KAAK,GAAG,4BAAd;AACA,IAAIrC,GAAG,GAAGJ,OAAO,CAAE,CAAF,EAAK,CAAL,EAAQyC,KAAK,CAACC,KAAN,CAAa,EAAb,CAAR,CAAjB;AACA,IAAI3B,MAAM,GAAG,KAAK2B,KAAL,CAAY,EAAZ,CAAb;AACA9B,OAAO,CAACC,GAAR,CAAa,mBAAmBE,MAAhC;AAEAD,UAAU,CAAEV,GAAF,EAAOW,MAAP,CAAV;AACAH,OAAO,CAACC,GAAR,CAAaT,GAAb;AAEA,IAAIsB,OAAO,GAAC,EAAZ;AACA,IAAIc,KAAK,GAAGf,SAAS,CAAErB,GAAF,EAAOW,MAAP,EAAe,CAAf,EAAkB,CAAlB,EAAqBW,OAArB,CAArB;AACAd,OAAO,CAACC,GAAR,CAAa,WAAW2B,KAAxB;AACA5B,OAAO,CAACC,GAAR,CAAaa,OAAb",
      "sourceRoot": "/Users/appy/QI/js-samples/algos2/",
      "sourcesContent": [
        "function makeXwd( n, m, init ) {\n\tlet xwd = new Array( n );\n\tfor ( let i = 0; i < n; i++ ) {\n\t\txwd[ i ] = new Array( m );\n\t\tif ( init ) {\n\t\t\tfor ( let j = 0; j < m; j++ ) {\n\t\t\t\txwd[ i ][ j ] = init[ ( Math.floor( Math.random() * init.length ) ) ];\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log( xwd );\n\treturn xwd;\n}\n\nfunction hideString( xwd, search ) {\n\tconst totRows = xwd.length;\n\tconst totCols = xwd[ 0 ].length;\n\n\tconst maxRowOff = totRows - search.length; //To accommodate search string\n\tconst maxColOff = totCols - search.length; //To accommodate search string\n\n\tconst dir = Math.floor( Math.random() * 3 );\n\tswitch ( dir ) {\n\t\tcase 0: { //Horizontal Left\n\t\t\tconst row = Math.floor( Math.random() * totRows );\n\t\t\tconst col = Math.floor( Math.random() * maxColOff );\n\t\t\tfor ( let i = 0; i < search.length; i++ ) {\n\t\t\t\txwd[ row ][ col + i ] = search[ i ];\n\t\t\t}\n\t\t}\n\t\t\tbreak;\n\t\tcase 1 : { //Vertical Down\n\t\t\tconst row = Math.floor( Math.random() * maxRowOff );\n\t\t\tconst col = Math.floor( Math.random() * totCols );\n\t\t\tfor ( let i = 0; i < search.length; i++ ) { xwd[ row + i ][ col ] = search[ i ]; }\n\t\t}\n\t\t\tbreak;\n\t\tcase 2: { // Diagonal Left Down\n\t\t\tconst row = Math.floor( Math.random() * maxRowOff );\n\t\t\tconst col = Math.floor( Math.random() * maxColOff );\n\t\t\tfor ( let i = 0; i < search.length; i++ ) {\n\t\t\t\txwd[ row + i ][ col + i ] = search[ i ];\n\t\t\t}\n\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow \"Invalid Direction\";\n\t}\n}\n\nlet VISITS = undefined;\n\n\nfunction xwdSearch( xwd, search, i, j, options ) {\n\tconst totRows = xwd.length;\n\tconst totCols = xwd[ 0 ].length;\n\n\tif ( i >= totRows || j >= totCols || i < 0 || j < 0 ) { return; }\n\n\toptions = options || {};\n\toptions.visits = options.visits || makeXwd( totRows, totCols, [0] );\n\toptions.expectations = options.expectations || [];\n\n\toptions.visits[ i ][ j ]++;\n\tlet expect = options.expectations;\n\n\tconst ch = xwd[ i ][ j ];\n\nconsole.log( \"VISITING [\" + i + \",\" + j + \"]=\" + ch );\n\tfor ( let k = 0; k < expect.length; k++ ) {\n\t\tlet e = expect[ k ];\n\t\tif ( e.r === i && e.c === j ) {\n\t\t\tif ( ch === search[ e.s ] ) {\n\t\t\t\tconsole.log( \"matched expectation at search index \" + e.s );\n\t\t\t\tif ( e.s === search.length - 1 ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tswitch ( e.d ) {\n\t\t\t\t\tcase 1: e.c++; e.s++; break;\n\t\t\t\t\tcase 2: e.r++; e.s++; break;\n\t\t\t\t\tcase 3: e.r++; e.c++; e.s++; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{\n\n\t\t// ASSUME all expectations will fail\n\t\tlet f = -1;\n\t\twhile ( (f = search.indexOf( ch, f + 1 )) >= 0 ) {\n\t\t\tif ( f < search.length - 1 ) {\n\t\t\t\tif ( totCols - j >= search.length - f ) {\n\t\t\t\t\texpect.push( { r: i, c: j + 1, s: f + 1, d: 1 } );\n\t\t\t\t}\n\t\t\t\tif ( totRows - i >= search.length - f ) {\n\t\t\t\t\texpect.push( { r: i + 1, c: j, s: f + 1, d: 2 } );\n\t\t\t\t}\n\t\t\t\tif ( totCols - j >= search.length - f && totRows - i >= search.length - f ) {\n\t\t\t\t\texpect.push( { r: i + 1, c: j + 1, s: f + 1, d: 3 } );\n\t\t\t\t}\n\t\t\t}\n/*\tSEARCH LEFT\n\t\tif ( f > 0 && i > 0 ) {\n\t\t\t\tif ( j >= f ) {\n\t\t\t\t\texpect.push( { r: i, c: j - 1, s: f - 1 } );\n\t\t\t\t}\n\t\t\t\tif ( i >= f ) {\n\t\t\t\t\texpect.push( { r: i - 1, c: j, s: f - 1 } );\n\t\t\t\t}\n\t\t\t\tif ( j > f && j > f ) {\n\t\t\t\t\texpect.push( { r: i - 1, c: j - 1, s: f - 1 } );\n\t\t\t\t}\n\t\t\t}\n*/\n\t\t}\n\t}\n\tlet found = false;\n\tfound = found || xwdSearch( xwd, search, i, j + 1, options ); //Visit node on right\n\tfound = found || xwdSearch( xwd, search, i + 1, j, options ); //Visit node below\n\tfound = found || xwdSearch( xwd, search, i + 1, j + 1, options ); //Visit node diagnally\n\n\treturn found;\n}\n\n\n\nconst alpha = \"qwertyuiopasdfghjklzxcvbnm\";\nlet xwd = makeXwd( 3, 3, alpha.split( \"\" ) );\nlet search = \"GO\".split( \"\" );\nconsole.log( \"Search String=\" + search );\n\nhideString( xwd, search );\nconsole.log( xwd );\n\nlet options={};\nlet found = xwdSearch( xwd, search, 0, 0, options );\nconsole.log( \"FOUND=\" + found );\nconsole.log( options );"
      ]
    },
    "sourceType": "script",
    "mtime": 1590777070363
  }
}